node root node_0x0 {			/* next @ 0xe */
	content-version = "1.0";
	fwd -> node_0x15e;
	fwd -> node_0xefd;
	fwd -> node_0x17d6;
	fwd -> node_0xdd;
	fwd -> node_0x276;
	fwd -> node_0x1807;
	fwd -> node_0x163;
	reset-reason = 0x0;		/* 0 */
	fwd -> node_0x17ed;
	fwd -> node_0x17d;
	fwd -> node_0x17db;
}					/* @ 0xd */
node latency-groups node_0xe {			/* next @ 0x21 */
	fwd -> node_0x1822;
	fwd -> node_0x1829;
	fwd -> node_0x1830;
	fwd -> node_0x1837;
	fwd -> node_0x183e;
	fwd -> node_0x1844;
	fwd -> node_0x184a;
	fwd -> node_0x1850;
	fwd -> node_0xb5;
	fwd -> node_0xba;
	fwd -> node_0xbf;
	fwd -> node_0xc4;
	fwd -> node_0xc9;
	fwd -> node_0xce;
	fwd -> node_0xd3;
	fwd -> node_0xd8;
	back -> node_0xdd;
}					/* @ 0x20 */
node group node_0x21 {			/* next @ 0x6b */
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
	fwd -> node_0x1822;
	fwd -> node_0x1837;
	fwd -> node_0xb5;
	fwd -> node_0xc4;
	fwd -> node_0xc9;
	fwd -> node_0xd8;
	fwd -> node_0x183e;
	fwd -> node_0x1850;
}					/* @ 0x6a */
node group node_0x6b {			/* next @ 0xb5 */
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
	fwd -> node_0x1830;
	fwd -> node_0x1829;
	fwd -> node_0xbf;
	fwd -> node_0xba;
	fwd -> node_0xd3;
	fwd -> node_0xce;
	fwd -> node_0x184a;
	fwd -> node_0x1844;
}					/* @ 0xb4 */
node pio-latency-group node_0xb5 {			/* next @ 0xba */
	latency = 0xc7b50;		/* 818000 */
	fwd -> node_0x1660;
	back -> node_0x21;
}					/* @ 0xb9 */
node pio-latency-group node_0xba {			/* next @ 0xbf */
	latency = 0xc7b50;		/* 818000 */
	fwd -> node_0x1686;
	back -> node_0x6b;
}					/* @ 0xbe */
node pio-latency-group node_0xbf {			/* next @ 0xc4 */
	latency = 0xdf638;		/* 915000 */
	fwd -> node_0x1660;
	back -> node_0x6b;
}					/* @ 0xc3 */
node pio-latency-group node_0xc4 {			/* next @ 0xc9 */
	latency = 0xdf638;		/* 915000 */
	fwd -> node_0x1686;
	back -> node_0x21;
}					/* @ 0xc8 */
node interrupt-latency-group node_0xc9 {			/* next @ 0xce */
	latency = 0x63da8;		/* 409000 */
	back -> node_0x1660;
	back -> node_0x21;
}					/* @ 0xcd */
node interrupt-latency-group node_0xce {			/* next @ 0xd3 */
	latency = 0x63da8;		/* 409000 */
	back -> node_0x1686;
	back -> node_0x6b;
}					/* @ 0xd2 */
node interrupt-latency-group node_0xd3 {			/* next @ 0xd8 */
	latency = 0xddec8;		/* 909000 */
	back -> node_0x1660;
	back -> node_0x6b;
}					/* @ 0xd7 */
node interrupt-latency-group node_0xd8 {			/* next @ 0xdd */
	latency = 0xddec8;		/* 909000 */
	back -> node_0x1686;
	back -> node_0x21;
}					/* @ 0xdc */
node platform node_0xdd {			/* next @ 0xeb */
	banner-name = "T5240";
	name = "SUNW,T5240";
	stick-frequency = 0x4542b680;		/* 1162000000 */
	watchdog-resolution = 0x3e8;		/* 1000 */
	watchdog-max-timeout = 0x757b12c00;		/* 31536000000 */
	max-cpus = 0x80;		/* 128 */
	mac-address = 0x144fa7bd36;		/* 87235738934 */
	hostid = 0x84a7bd36;		/* 2225585462 */
	serial# = 0xab4130;		/* 11223344 */
	domaining-enabled = 0x1;		/* 1 */
	fwd -> node_0xe;
	back -> node_0x0;
}					/* @ 0xea */
node devalias node_0xeb {			/* next @ 0x100 */
	virtual-console = "/virtual-devices/console@1";
	scsi = "/pci@400/pci@0/pci@8/scsi@0";
	disk = "/pci@400/pci@0/pci@8/scsi@0/disk@0";
	disk0 = "/pci@400/pci@0/pci@8/scsi@0/disk@0";
	disk1 = "/pci@400/pci@0/pci@8/scsi@0/disk@1";
	disk2 = "/pci@400/pci@0/pci@8/scsi@0/disk@2";
	disk3 = "/pci@400/pci@0/pci@8/scsi@0/disk@3";
	disk4 = "/pci@400/pci@0/pci@8/scsi@0/disk@4";
	disk5 = "/pci@400/pci@0/pci@8/scsi@0/disk@5";
	disk6 = "/pci@400/pci@0/pci@8/scsi@0/disk@6";
	disk7 = "/pci@400/pci@0/pci@8/scsi@0/disk@7";
	cdrom = "/pci@400/pci@0/pci@1/pci@0/usb@0,2/storage@2/disk@0:f";
	net = "/pci@500/pci@0/pci@8/network@0";
	net0 = "/pci@500/pci@0/pci@8/network@0";
	net1 = "/pci@500/pci@0/pci@8/network@0,1";
	net2 = "/pci@500/pci@0/pci@8/network@0,2";
	net3 = "/pci@500/pci@0/pci@8/network@0,3";
	ttya = "/ebus@c0/serial@0,ca0000";
	back -> node_0x276;
}					/* @ 0xff */
node virtual-device node_0x100 {			/* next @ 0x108 */
	back -> node_0x17ed;
	name = "ncp";
	intr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 };
	ino = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x23,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x27,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x29,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2d,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2e,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2f };
	cfg-handle = 0x6;		/* 6 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x76, 0x66, 0x2d,
		0x6d, 0x61, 0x75, 0x00 };
}					/* @ 0x107 */
node virtual-device node_0x108 {			/* next @ 0x110 */
	back -> node_0x17ed;
	name = "n2cp";
	intr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10 };
	ino = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x31,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x32,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x33,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x35,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x36,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x37,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3a,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3b,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3c,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3d,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f };
	cfg-handle = 0x7;		/* 7 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x76, 0x66, 0x2d,
		0x63, 0x77, 0x71, 0x00 };
}					/* @ 0x10f */
node interrupt-maps node_0x110 {			/* next @ 0x116 */
	back -> node_0x276;
	fwd -> node_0x116;
	fwd -> node_0x122;
	fwd -> node_0xeb;
}					/* @ 0x115 */
node interrupt-map node_0x116 {			/* next @ 0x122 */
	back -> node_0x110;
	dev = "/pci@400";
	parent = "/pci@400";
	intr-cells = 0x1;		/* 1 */
	intr-mask = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 };
	interrupts = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e };
	fwd -> node_0x12e;
	fwd -> node_0x134;
	fwd -> node_0x13a;
	fwd -> node_0x140;
}					/* @ 0x121 */
node interrupt-map node_0x122 {			/* next @ 0x12e */
	back -> node_0x110;
	dev = "/pci@500";
	parent = "/pci@500";
	intr-cells = 0x1;		/* 1 */
	intr-mask = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 };
	interrupts = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e };
	fwd -> node_0x146;
	fwd -> node_0x14c;
	fwd -> node_0x152;
	fwd -> node_0x158;
}					/* @ 0x12d */
node interrupt node_0x12e {			/* next @ 0x134 */
	back -> node_0x116;
	intr = 0x1;		/* 1 */
	ino = 0x14;		/* 20 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x133 */
node interrupt node_0x134 {			/* next @ 0x13a */
	back -> node_0x116;
	intr = 0x2;		/* 2 */
	ino = 0x15;		/* 21 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x139 */
node interrupt node_0x13a {			/* next @ 0x140 */
	back -> node_0x116;
	intr = 0x3;		/* 3 */
	ino = 0x16;		/* 22 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x13f */
node interrupt node_0x140 {			/* next @ 0x146 */
	back -> node_0x116;
	intr = 0x4;		/* 4 */
	ino = 0x17;		/* 23 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x145 */
node interrupt node_0x146 {			/* next @ 0x14c */
	back -> node_0x122;
	intr = 0x1;		/* 1 */
	ino = 0x14;		/* 20 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x14b */
node interrupt node_0x14c {			/* next @ 0x152 */
	back -> node_0x122;
	intr = 0x2;		/* 2 */
	ino = 0x15;		/* 21 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x151 */
node interrupt node_0x152 {			/* next @ 0x158 */
	back -> node_0x122;
	intr = 0x3;		/* 3 */
	ino = 0x16;		/* 22 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x157 */
node interrupt node_0x158 {			/* next @ 0x15e */
	back -> node_0x122;
	intr = 0x4;		/* 4 */
	ino = 0x17;		/* 23 */
	addr = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
}					/* @ 0x15d */
node memory node_0x15e {			/* next @ 0x163 */
	memory-generation-id# = 0x0;		/* 0 */
	back -> node_0x0;
	fwd -> node_0x1814;
}					/* @ 0x162 */
node keystore node_0x163 {			/* next @ 0x166 */
	back -> node_0x0;
}					/* @ 0x165 */
node virtual-device node_0x166 {			/* next @ 0x16d */
	back -> node_0x17ed;
	name = "flashprom";
	fcode-driver-name = "flashprom-virtual-device";
	compatible = {

		0x66, 0x6c, 0x61, 0x73, 0x68, 0x70, 0x72, 0x6f,
		0x6d, 0x2d, 0x76, 0x69, 0x72, 0x74, 0x75, 0x61,
		0x6c, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x00 };
	cfg-handle = 0x0;		/* 0 */
}					/* @ 0x16c */
node virtual-device node_0x16d {			/* next @ 0x176 */
	back -> node_0x17ed;
	name = "console";
	fcode-driver-name = "console-virtual-device";
	intr = 0x1;		/* 1 */
	ino = 0x11;		/* 17 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x6f, 0x6e, 0x73, 0x6f,
		0x6c, 0x65, 0x00 };
	cfg-handle = 0x1;		/* 1 */
}					/* @ 0x175 */
node virtual-device node_0x176 {			/* next @ 0x17d */
	back -> node_0x17ed;
	name = "rtc";
	fcode-driver-name = "tod-virtual-device";
	cfg-handle = 0x5;		/* 5 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x74, 0x6f, 0x64, 0x00 };
}					/* @ 0x17c */
node domain-services node_0x17d {			/* next @ 0x182 */
	back -> node_0x0;
	fwd -> node_0x25e;
	fwd -> node_0x26a;
}					/* @ 0x181 */
node virtual-device node_0x182 {			/* next @ 0x190 */
	back -> node_0x17fc;
	name = "virtual-channel";
	device-type = "serial";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
		0x65, 0x6c, 0x00 };
	cfg-handle = 0x3;		/* 3 */
	fwd -> node_0x190;
	fwd -> node_0x19e;
	fwd -> node_0x1ac;
	fwd -> node_0x1ba;
	fwd -> node_0x1c8;
	fwd -> node_0x1d6;
	fwd -> node_0x1e4;
}					/* @ 0x18f */
node virtual-device-port node_0x190 {			/* next @ 0x198 */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14 };
	id = 0x0;		/* 0 */
	vldc-svc-name = "spds";
	fwd -> node_0x198;
}					/* @ 0x197 */
node channel-endpoint node_0x198 {			/* next @ 0x19e */
	back -> node_0x190;
	id = 0x14;		/* 20 */
	tx-ino = 0x28;		/* 40 */
	rx-ino = 0x29;		/* 41 */
}					/* @ 0x19d */
node virtual-device-port node_0x19e {			/* next @ 0x1a6 */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06 };
	id = 0x1;		/* 1 */
	vldc-svc-name = "sunvts";
	fwd -> node_0x1a6;
}					/* @ 0x1a5 */
node channel-endpoint node_0x1a6 {			/* next @ 0x1ac */
	back -> node_0x19e;
	id = 0x6;		/* 6 */
	tx-ino = 0xc;		/* 12 */
	rx-ino = 0xd;		/* 13 */
}					/* @ 0x1ab */
node virtual-device-port node_0x1ac {			/* next @ 0x1b4 */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 };
	id = 0x2;		/* 2 */
	vldc-svc-name = "sunmc";
	fwd -> node_0x1b4;
}					/* @ 0x1b3 */
node channel-endpoint node_0x1b4 {			/* next @ 0x1ba */
	back -> node_0x1ac;
	id = 0x7;		/* 7 */
	tx-ino = 0xe;		/* 14 */
	rx-ino = 0xf;		/* 15 */
}					/* @ 0x1b9 */
node virtual-device-port node_0x1ba {			/* next @ 0x1c2 */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08 };
	id = 0x3;		/* 3 */
	vldc-svc-name = "explorer";
	fwd -> node_0x1c2;
}					/* @ 0x1c1 */
node channel-endpoint node_0x1c2 {			/* next @ 0x1c8 */
	back -> node_0x1ba;
	id = 0x8;		/* 8 */
	tx-ino = 0x10;		/* 16 */
	rx-ino = 0x11;		/* 17 */
}					/* @ 0x1c7 */
node virtual-device-port node_0x1c8 {			/* next @ 0x1d0 */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09 };
	id = 0x4;		/* 4 */
	vldc-svc-name = "led";
	fwd -> node_0x1d0;
}					/* @ 0x1cf */
node channel-endpoint node_0x1d0 {			/* next @ 0x1d6 */
	back -> node_0x1c8;
	id = 0x9;		/* 9 */
	tx-ino = 0x12;		/* 18 */
	rx-ino = 0x13;		/* 19 */
}					/* @ 0x1d5 */
node virtual-device-port node_0x1d6 {			/* next @ 0x1de */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0a };
	id = 0x5;		/* 5 */
	vldc-svc-name = "flashupdate";
	fwd -> node_0x1de;
}					/* @ 0x1dd */
node channel-endpoint node_0x1de {			/* next @ 0x1e4 */
	back -> node_0x1d6;
	id = 0xa;		/* 10 */
	tx-ino = 0x14;		/* 20 */
	rx-ino = 0x15;		/* 21 */
}					/* @ 0x1e3 */
node virtual-device-port node_0x1e4 {			/* next @ 0x1ec */
	back -> node_0x182;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d };
	id = 0x8;		/* 8 */
	vldc-svc-name = "system-management";
	fwd -> node_0x1ec;
}					/* @ 0x1eb */
node channel-endpoint node_0x1ec {			/* next @ 0x1f2 */
	back -> node_0x1e4;
	id = 0xd;		/* 13 */
	tx-ino = 0x1a;		/* 26 */
	rx-ino = 0x1b;		/* 27 */
}					/* @ 0x1f1 */
node virtual-device node_0x1f2 {			/* next @ 0x1fa */
	back -> node_0x17fc;
	name = "virtual-channel-client";
	device-type = "serial";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
		0x65, 0x6c, 0x00 };
	cfg-handle = 0x2;		/* 2 */
	fwd -> node_0x1fa;
}					/* @ 0x1f9 */
node virtual-device-port node_0x1fa {			/* next @ 0x202 */
	back -> node_0x1f2;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05 };
	id = 0x0;		/* 0 */
	vldc-svc-name = "spfma";
	fwd -> node_0x202;
}					/* @ 0x201 */
node channel-endpoint node_0x202 {			/* next @ 0x208 */
	back -> node_0x1fa;
	id = 0x5;		/* 5 */
	tx-ino = 0xa;		/* 10 */
	rx-ino = 0xb;		/* 11 */
}					/* @ 0x207 */
node virtual-device node_0x208 {			/* next @ 0x212 */
	back -> node_0x17fc;
	name = "virtual-channel";
	device-type = "serial";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
		0x65, 0x6c, 0x00 };
	cfg-handle = 0x0;		/* 0 */
	fwd -> node_0x212;
	fwd -> node_0x220;
	fwd -> node_0x22e;
}					/* @ 0x211 */
node virtual-device-port node_0x212 {			/* next @ 0x21a */
	back -> node_0x208;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	id = 0x0;		/* 0 */
	vldc-svc-name = "hvctl";
	fwd -> node_0x21a;
}					/* @ 0x219 */
node channel-endpoint node_0x21a {			/* next @ 0x220 */
	back -> node_0x212;
	id = 0x0;		/* 0 */
	tx-ino = 0x0;		/* 0 */
	rx-ino = 0x1;		/* 1 */
}					/* @ 0x21f */
node virtual-device-port node_0x220 {			/* next @ 0x228 */
	back -> node_0x208;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01 };
	id = 0x1;		/* 1 */
	vldc-svc-name = "ldom-primary";
	fwd -> node_0x228;
}					/* @ 0x227 */
node channel-endpoint node_0x228 {			/* next @ 0x22e */
	back -> node_0x220;
	id = 0x1;		/* 1 */
	tx-ino = 0x2;		/* 2 */
	rx-ino = 0x3;		/* 3 */
}					/* @ 0x22d */
node virtual-device-port node_0x22e {			/* next @ 0x236 */
	back -> node_0x208;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03 };
	id = 0x2;		/* 2 */
	vldc-svc-name = "fmactl";
	fwd -> node_0x236;
}					/* @ 0x235 */
node channel-endpoint node_0x236 {			/* next @ 0x23c */
	back -> node_0x22e;
	id = 0x3;		/* 3 */
	tx-ino = 0x6;		/* 6 */
	rx-ino = 0x7;		/* 7 */
}					/* @ 0x23b */
node virtual-device node_0x23c {			/* next @ 0x244 */
	back -> node_0x17fc;
	name = "virtual-channel-client";
	device-type = "serial";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
		0x65, 0x6c, 0x00 };
	cfg-handle = 0x1;		/* 1 */
	fwd -> node_0x244;
}					/* @ 0x243 */
node virtual-device-port node_0x244 {			/* next @ 0x24c */
	back -> node_0x23c;
	name = "vldc-port";
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04 };
	id = 0x0;		/* 0 */
	vldc-svc-name = "ldmfma";
	fwd -> node_0x24c;
}					/* @ 0x24b */
node channel-endpoint node_0x24c {			/* next @ 0x252 */
	back -> node_0x244;
	id = 0x4;		/* 4 */
	tx-ino = 0x8;		/* 8 */
	rx-ino = 0x9;		/* 9 */
}					/* @ 0x251 */
node domain-services-port node_0x252 {			/* next @ 0x258 */
	back -> node_0x276;
	id = 0x0;		/* 0 */
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15 };
	fwd -> node_0x258;
}					/* @ 0x257 */
node channel-endpoint node_0x258 {			/* next @ 0x25e */
	back -> node_0x252;
	id = 0x15;		/* 21 */
	tx-ino = 0x2a;		/* 42 */
	rx-ino = 0x2b;		/* 43 */
}					/* @ 0x25d */
node domain-services-port node_0x25e {			/* next @ 0x264 */
	back -> node_0x17d;
	id = 0x1;		/* 1 */
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x17 };
	fwd -> node_0x264;
}					/* @ 0x263 */
node channel-endpoint node_0x264 {			/* next @ 0x26a */
	back -> node_0x25e;
	id = 0x17;		/* 23 */
	tx-ino = 0x2e;		/* 46 */
	rx-ino = 0x2f;		/* 47 */
}					/* @ 0x269 */
node domain-services-port node_0x26a {			/* next @ 0x270 */
	back -> node_0x17d;
	id = 0x0;		/* 0 */
	ldc-ids = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02 };
	fwd -> node_0x270;
}					/* @ 0x26f */
node channel-endpoint node_0x270 {			/* next @ 0x276 */
	back -> node_0x26a;
	id = 0x2;		/* 2 */
	tx-ino = 0x4;		/* 4 */
	rx-ino = 0x5;		/* 5 */
}					/* @ 0x275 */
node openboot node_0x276 {			/* next @ 0x27d */
	back -> node_0x0;
	fwd -> node_0xeb;
	fwd -> node_0x252;
	fwd -> node_0x110;
	pci-mem64-support = 0x0;		/* 0 */
}					/* @ 0x27c */
node cpu node_0x27d {			/* next @ 0x296 */
	id = 0x0;		/* 0 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfa6;
	fwd -> node_0xfaf;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x295 */
node cpu node_0x296 {			/* next @ 0x2af */
	id = 0x1;		/* 1 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfa6;
	fwd -> node_0xfaf;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x2ae */
node cpu node_0x2af {			/* next @ 0x2c8 */
	id = 0x2;		/* 2 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfa6;
	fwd -> node_0xfaf;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x2c7 */
node cpu node_0x2c8 {			/* next @ 0x2e1 */
	id = 0x3;		/* 3 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfa6;
	fwd -> node_0xfaf;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x2e0 */
node cpu node_0x2e1 {			/* next @ 0x2fa */
	id = 0x4;		/* 4 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfb8;
	fwd -> node_0xfc1;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x2f9 */
node cpu node_0x2fa {			/* next @ 0x313 */
	id = 0x5;		/* 5 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfb8;
	fwd -> node_0xfc1;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x312 */
node cpu node_0x313 {			/* next @ 0x32c */
	id = 0x6;		/* 6 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfb8;
	fwd -> node_0xfc1;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x32b */
node cpu node_0x32c {			/* next @ 0x345 */
	id = 0x7;		/* 7 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xfb8;
	fwd -> node_0xfc1;
	fwd -> node_0x1420;
	fwd -> node_0x1580;
	fwd -> node_0x14d0;
	fwd -> node_0x21;
}					/* @ 0x344 */
node cpu node_0x345 {			/* next @ 0x35e */
	id = 0x8;		/* 8 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xff0;
	fwd -> node_0xff9;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x35d */
node cpu node_0x35e {			/* next @ 0x377 */
	id = 0x9;		/* 9 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xff0;
	fwd -> node_0xff9;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x376 */
node cpu node_0x377 {			/* next @ 0x390 */
	id = 0xa;		/* 10 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xff0;
	fwd -> node_0xff9;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x38f */
node cpu node_0x390 {			/* next @ 0x3a9 */
	id = 0xb;		/* 11 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0xff0;
	fwd -> node_0xff9;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x3a8 */
node cpu node_0x3a9 {			/* next @ 0x3c2 */
	id = 0xc;		/* 12 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1002;
	fwd -> node_0x100b;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x3c1 */
node cpu node_0x3c2 {			/* next @ 0x3db */
	id = 0xd;		/* 13 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1002;
	fwd -> node_0x100b;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x3da */
node cpu node_0x3db {			/* next @ 0x3f4 */
	id = 0xe;		/* 14 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1002;
	fwd -> node_0x100b;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x3f3 */
node cpu node_0x3f4 {			/* next @ 0x40d */
	id = 0xf;		/* 15 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1002;
	fwd -> node_0x100b;
	fwd -> node_0x142b;
	fwd -> node_0x158b;
	fwd -> node_0x14db;
	fwd -> node_0x21;
}					/* @ 0x40c */
node cpu node_0x40d {			/* next @ 0x426 */
	id = 0x10;		/* 16 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x103a;
	fwd -> node_0x1043;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x425 */
node cpu node_0x426 {			/* next @ 0x43f */
	id = 0x11;		/* 17 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x103a;
	fwd -> node_0x1043;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x43e */
node cpu node_0x43f {			/* next @ 0x458 */
	id = 0x12;		/* 18 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x103a;
	fwd -> node_0x1043;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x457 */
node cpu node_0x458 {			/* next @ 0x471 */
	id = 0x13;		/* 19 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x103a;
	fwd -> node_0x1043;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x470 */
node cpu node_0x471 {			/* next @ 0x48a */
	id = 0x14;		/* 20 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x104c;
	fwd -> node_0x1055;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x489 */
node cpu node_0x48a {			/* next @ 0x4a3 */
	id = 0x15;		/* 21 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x104c;
	fwd -> node_0x1055;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x4a2 */
node cpu node_0x4a3 {			/* next @ 0x4bc */
	id = 0x16;		/* 22 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x104c;
	fwd -> node_0x1055;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x4bb */
node cpu node_0x4bc {			/* next @ 0x4d5 */
	id = 0x17;		/* 23 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x104c;
	fwd -> node_0x1055;
	fwd -> node_0x1436;
	fwd -> node_0x1596;
	fwd -> node_0x14e6;
	fwd -> node_0x21;
}					/* @ 0x4d4 */
node cpu node_0x4d5 {			/* next @ 0x4ee */
	id = 0x18;		/* 24 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1084;
	fwd -> node_0x108d;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x4ed */
node cpu node_0x4ee {			/* next @ 0x507 */
	id = 0x19;		/* 25 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1084;
	fwd -> node_0x108d;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x506 */
node cpu node_0x507 {			/* next @ 0x520 */
	id = 0x1a;		/* 26 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1084;
	fwd -> node_0x108d;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x51f */
node cpu node_0x520 {			/* next @ 0x539 */
	id = 0x1b;		/* 27 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1084;
	fwd -> node_0x108d;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x538 */
node cpu node_0x539 {			/* next @ 0x552 */
	id = 0x1c;		/* 28 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1096;
	fwd -> node_0x109f;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x551 */
node cpu node_0x552 {			/* next @ 0x56b */
	id = 0x1d;		/* 29 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1096;
	fwd -> node_0x109f;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x56a */
node cpu node_0x56b {			/* next @ 0x584 */
	id = 0x1e;		/* 30 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1096;
	fwd -> node_0x109f;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x583 */
node cpu node_0x584 {			/* next @ 0x59d */
	id = 0x1f;		/* 31 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1096;
	fwd -> node_0x109f;
	fwd -> node_0x1441;
	fwd -> node_0x15a1;
	fwd -> node_0x14f1;
	fwd -> node_0x21;
}					/* @ 0x59c */
node cpu node_0x59d {			/* next @ 0x5b6 */
	id = 0x20;		/* 32 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10ce;
	fwd -> node_0x10d7;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x5b5 */
node cpu node_0x5b6 {			/* next @ 0x5cf */
	id = 0x21;		/* 33 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10ce;
	fwd -> node_0x10d7;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x5ce */
node cpu node_0x5cf {			/* next @ 0x5e8 */
	id = 0x22;		/* 34 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10ce;
	fwd -> node_0x10d7;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x5e7 */
node cpu node_0x5e8 {			/* next @ 0x601 */
	id = 0x23;		/* 35 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10ce;
	fwd -> node_0x10d7;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x600 */
node cpu node_0x601 {			/* next @ 0x61a */
	id = 0x24;		/* 36 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10e0;
	fwd -> node_0x10e9;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x619 */
node cpu node_0x61a {			/* next @ 0x633 */
	id = 0x25;		/* 37 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10e0;
	fwd -> node_0x10e9;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x632 */
node cpu node_0x633 {			/* next @ 0x64c */
	id = 0x26;		/* 38 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10e0;
	fwd -> node_0x10e9;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x64b */
node cpu node_0x64c {			/* next @ 0x665 */
	id = 0x27;		/* 39 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x10e0;
	fwd -> node_0x10e9;
	fwd -> node_0x144c;
	fwd -> node_0x15ac;
	fwd -> node_0x14fc;
	fwd -> node_0x21;
}					/* @ 0x664 */
node cpu node_0x665 {			/* next @ 0x67e */
	id = 0x28;		/* 40 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1118;
	fwd -> node_0x1121;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x67d */
node cpu node_0x67e {			/* next @ 0x697 */
	id = 0x29;		/* 41 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1118;
	fwd -> node_0x1121;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x696 */
node cpu node_0x697 {			/* next @ 0x6b0 */
	id = 0x2a;		/* 42 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1118;
	fwd -> node_0x1121;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x6af */
node cpu node_0x6b0 {			/* next @ 0x6c9 */
	id = 0x2b;		/* 43 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1118;
	fwd -> node_0x1121;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x6c8 */
node cpu node_0x6c9 {			/* next @ 0x6e2 */
	id = 0x2c;		/* 44 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x112a;
	fwd -> node_0x1133;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x6e1 */
node cpu node_0x6e2 {			/* next @ 0x6fb */
	id = 0x2d;		/* 45 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x112a;
	fwd -> node_0x1133;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x6fa */
node cpu node_0x6fb {			/* next @ 0x714 */
	id = 0x2e;		/* 46 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x112a;
	fwd -> node_0x1133;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x713 */
node cpu node_0x714 {			/* next @ 0x72d */
	id = 0x2f;		/* 47 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x112a;
	fwd -> node_0x1133;
	fwd -> node_0x1457;
	fwd -> node_0x15b7;
	fwd -> node_0x1507;
	fwd -> node_0x21;
}					/* @ 0x72c */
node cpu node_0x72d {			/* next @ 0x746 */
	id = 0x30;		/* 48 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1162;
	fwd -> node_0x116b;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x745 */
node cpu node_0x746 {			/* next @ 0x75f */
	id = 0x31;		/* 49 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1162;
	fwd -> node_0x116b;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x75e */
node cpu node_0x75f {			/* next @ 0x778 */
	id = 0x32;		/* 50 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1162;
	fwd -> node_0x116b;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x777 */
node cpu node_0x778 {			/* next @ 0x791 */
	id = 0x33;		/* 51 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1162;
	fwd -> node_0x116b;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x790 */
node cpu node_0x791 {			/* next @ 0x7aa */
	id = 0x34;		/* 52 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1174;
	fwd -> node_0x117d;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x7a9 */
node cpu node_0x7aa {			/* next @ 0x7c3 */
	id = 0x35;		/* 53 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1174;
	fwd -> node_0x117d;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x7c2 */
node cpu node_0x7c3 {			/* next @ 0x7dc */
	id = 0x36;		/* 54 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1174;
	fwd -> node_0x117d;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x7db */
node cpu node_0x7dc {			/* next @ 0x7f5 */
	id = 0x37;		/* 55 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1174;
	fwd -> node_0x117d;
	fwd -> node_0x1462;
	fwd -> node_0x15c2;
	fwd -> node_0x1512;
	fwd -> node_0x21;
}					/* @ 0x7f4 */
node cpu node_0x7f5 {			/* next @ 0x80e */
	id = 0x38;		/* 56 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11ac;
	fwd -> node_0x11b5;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x80d */
node cpu node_0x80e {			/* next @ 0x827 */
	id = 0x39;		/* 57 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11ac;
	fwd -> node_0x11b5;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x826 */
node cpu node_0x827 {			/* next @ 0x840 */
	id = 0x3a;		/* 58 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11ac;
	fwd -> node_0x11b5;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x83f */
node cpu node_0x840 {			/* next @ 0x859 */
	id = 0x3b;		/* 59 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11ac;
	fwd -> node_0x11b5;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x858 */
node cpu node_0x859 {			/* next @ 0x872 */
	id = 0x3c;		/* 60 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11be;
	fwd -> node_0x11c7;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x871 */
node cpu node_0x872 {			/* next @ 0x88b */
	id = 0x3d;		/* 61 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11be;
	fwd -> node_0x11c7;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x88a */
node cpu node_0x88b {			/* next @ 0x8a4 */
	id = 0x3e;		/* 62 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11be;
	fwd -> node_0x11c7;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x8a3 */
node cpu node_0x8a4 {			/* next @ 0x8bd */
	id = 0x3f;		/* 63 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11be;
	fwd -> node_0x11c7;
	fwd -> node_0x146d;
	fwd -> node_0x15cd;
	fwd -> node_0x151d;
	fwd -> node_0x21;
}					/* @ 0x8bc */
node cpu node_0x8bd {			/* next @ 0x8d6 */
	id = 0x40;		/* 64 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11f6;
	fwd -> node_0x11ff;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x8d5 */
node cpu node_0x8d6 {			/* next @ 0x8ef */
	id = 0x41;		/* 65 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11f6;
	fwd -> node_0x11ff;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x8ee */
node cpu node_0x8ef {			/* next @ 0x908 */
	id = 0x42;		/* 66 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11f6;
	fwd -> node_0x11ff;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x907 */
node cpu node_0x908 {			/* next @ 0x921 */
	id = 0x43;		/* 67 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x11f6;
	fwd -> node_0x11ff;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x920 */
node cpu node_0x921 {			/* next @ 0x93a */
	id = 0x44;		/* 68 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1208;
	fwd -> node_0x1211;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x939 */
node cpu node_0x93a {			/* next @ 0x953 */
	id = 0x45;		/* 69 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1208;
	fwd -> node_0x1211;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x952 */
node cpu node_0x953 {			/* next @ 0x96c */
	id = 0x46;		/* 70 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1208;
	fwd -> node_0x1211;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x96b */
node cpu node_0x96c {			/* next @ 0x985 */
	id = 0x47;		/* 71 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1208;
	fwd -> node_0x1211;
	fwd -> node_0x1478;
	fwd -> node_0x15d8;
	fwd -> node_0x1528;
	fwd -> node_0x6b;
}					/* @ 0x984 */
node cpu node_0x985 {			/* next @ 0x99e */
	id = 0x48;		/* 72 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1240;
	fwd -> node_0x1249;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0x99d */
node cpu node_0x99e {			/* next @ 0x9b7 */
	id = 0x49;		/* 73 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1240;
	fwd -> node_0x1249;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0x9b6 */
node cpu node_0x9b7 {			/* next @ 0x9d0 */
	id = 0x4a;		/* 74 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1240;
	fwd -> node_0x1249;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0x9cf */
node cpu node_0x9d0 {			/* next @ 0x9e9 */
	id = 0x4b;		/* 75 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1240;
	fwd -> node_0x1249;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0x9e8 */
node cpu node_0x9e9 {			/* next @ 0xa02 */
	id = 0x4c;		/* 76 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1252;
	fwd -> node_0x125b;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0xa01 */
node cpu node_0xa02 {			/* next @ 0xa1b */
	id = 0x4d;		/* 77 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1252;
	fwd -> node_0x125b;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0xa1a */
node cpu node_0xa1b {			/* next @ 0xa34 */
	id = 0x4e;		/* 78 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1252;
	fwd -> node_0x125b;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0xa33 */
node cpu node_0xa34 {			/* next @ 0xa4d */
	id = 0x4f;		/* 79 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1252;
	fwd -> node_0x125b;
	fwd -> node_0x1483;
	fwd -> node_0x15e3;
	fwd -> node_0x1533;
	fwd -> node_0x6b;
}					/* @ 0xa4c */
node cpu node_0xa4d {			/* next @ 0xa66 */
	id = 0x50;		/* 80 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x128a;
	fwd -> node_0x1293;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xa65 */
node cpu node_0xa66 {			/* next @ 0xa7f */
	id = 0x51;		/* 81 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x128a;
	fwd -> node_0x1293;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xa7e */
node cpu node_0xa7f {			/* next @ 0xa98 */
	id = 0x52;		/* 82 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x128a;
	fwd -> node_0x1293;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xa97 */
node cpu node_0xa98 {			/* next @ 0xab1 */
	id = 0x53;		/* 83 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x128a;
	fwd -> node_0x1293;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xab0 */
node cpu node_0xab1 {			/* next @ 0xaca */
	id = 0x54;		/* 84 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x129c;
	fwd -> node_0x12a5;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xac9 */
node cpu node_0xaca {			/* next @ 0xae3 */
	id = 0x55;		/* 85 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x129c;
	fwd -> node_0x12a5;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xae2 */
node cpu node_0xae3 {			/* next @ 0xafc */
	id = 0x56;		/* 86 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x129c;
	fwd -> node_0x12a5;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xafb */
node cpu node_0xafc {			/* next @ 0xb15 */
	id = 0x57;		/* 87 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x129c;
	fwd -> node_0x12a5;
	fwd -> node_0x148e;
	fwd -> node_0x15ee;
	fwd -> node_0x153e;
	fwd -> node_0x6b;
}					/* @ 0xb14 */
node cpu node_0xb15 {			/* next @ 0xb2e */
	id = 0x58;		/* 88 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12d4;
	fwd -> node_0x12dd;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xb2d */
node cpu node_0xb2e {			/* next @ 0xb47 */
	id = 0x59;		/* 89 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12d4;
	fwd -> node_0x12dd;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xb46 */
node cpu node_0xb47 {			/* next @ 0xb60 */
	id = 0x5a;		/* 90 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12d4;
	fwd -> node_0x12dd;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xb5f */
node cpu node_0xb60 {			/* next @ 0xb79 */
	id = 0x5b;		/* 91 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12d4;
	fwd -> node_0x12dd;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xb78 */
node cpu node_0xb79 {			/* next @ 0xb92 */
	id = 0x5c;		/* 92 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12e6;
	fwd -> node_0x12ef;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xb91 */
node cpu node_0xb92 {			/* next @ 0xbab */
	id = 0x5d;		/* 93 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12e6;
	fwd -> node_0x12ef;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xbaa */
node cpu node_0xbab {			/* next @ 0xbc4 */
	id = 0x5e;		/* 94 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12e6;
	fwd -> node_0x12ef;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xbc3 */
node cpu node_0xbc4 {			/* next @ 0xbdd */
	id = 0x5f;		/* 95 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x12e6;
	fwd -> node_0x12ef;
	fwd -> node_0x1499;
	fwd -> node_0x15f9;
	fwd -> node_0x1549;
	fwd -> node_0x6b;
}					/* @ 0xbdc */
node cpu node_0xbdd {			/* next @ 0xbf6 */
	id = 0x60;		/* 96 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x131e;
	fwd -> node_0x1327;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xbf5 */
node cpu node_0xbf6 {			/* next @ 0xc0f */
	id = 0x61;		/* 97 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x131e;
	fwd -> node_0x1327;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc0e */
node cpu node_0xc0f {			/* next @ 0xc28 */
	id = 0x62;		/* 98 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x131e;
	fwd -> node_0x1327;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc27 */
node cpu node_0xc28 {			/* next @ 0xc41 */
	id = 0x63;		/* 99 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x131e;
	fwd -> node_0x1327;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc40 */
node cpu node_0xc41 {			/* next @ 0xc5a */
	id = 0x64;		/* 100 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1330;
	fwd -> node_0x1339;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc59 */
node cpu node_0xc5a {			/* next @ 0xc73 */
	id = 0x65;		/* 101 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1330;
	fwd -> node_0x1339;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc72 */
node cpu node_0xc73 {			/* next @ 0xc8c */
	id = 0x66;		/* 102 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1330;
	fwd -> node_0x1339;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xc8b */
node cpu node_0xc8c {			/* next @ 0xca5 */
	id = 0x67;		/* 103 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1330;
	fwd -> node_0x1339;
	fwd -> node_0x14a4;
	fwd -> node_0x1604;
	fwd -> node_0x1554;
	fwd -> node_0x6b;
}					/* @ 0xca4 */
node cpu node_0xca5 {			/* next @ 0xcbe */
	id = 0x68;		/* 104 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1368;
	fwd -> node_0x1371;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xcbd */
node cpu node_0xcbe {			/* next @ 0xcd7 */
	id = 0x69;		/* 105 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1368;
	fwd -> node_0x1371;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xcd6 */
node cpu node_0xcd7 {			/* next @ 0xcf0 */
	id = 0x6a;		/* 106 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1368;
	fwd -> node_0x1371;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xcef */
node cpu node_0xcf0 {			/* next @ 0xd09 */
	id = 0x6b;		/* 107 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x1368;
	fwd -> node_0x1371;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xd08 */
node cpu node_0xd09 {			/* next @ 0xd22 */
	id = 0x6c;		/* 108 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x137a;
	fwd -> node_0x1383;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xd21 */
node cpu node_0xd22 {			/* next @ 0xd3b */
	id = 0x6d;		/* 109 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x137a;
	fwd -> node_0x1383;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xd3a */
node cpu node_0xd3b {			/* next @ 0xd54 */
	id = 0x6e;		/* 110 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x137a;
	fwd -> node_0x1383;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xd53 */
node cpu node_0xd54 {			/* next @ 0xd6d */
	id = 0x6f;		/* 111 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x137a;
	fwd -> node_0x1383;
	fwd -> node_0x14af;
	fwd -> node_0x160f;
	fwd -> node_0x155f;
	fwd -> node_0x6b;
}					/* @ 0xd6c */
node cpu node_0xd6d {			/* next @ 0xd86 */
	id = 0x70;		/* 112 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13b2;
	fwd -> node_0x13bb;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xd85 */
node cpu node_0xd86 {			/* next @ 0xd9f */
	id = 0x71;		/* 113 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13b2;
	fwd -> node_0x13bb;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xd9e */
node cpu node_0xd9f {			/* next @ 0xdb8 */
	id = 0x72;		/* 114 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13b2;
	fwd -> node_0x13bb;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xdb7 */
node cpu node_0xdb8 {			/* next @ 0xdd1 */
	id = 0x73;		/* 115 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13b2;
	fwd -> node_0x13bb;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xdd0 */
node cpu node_0xdd1 {			/* next @ 0xdea */
	id = 0x74;		/* 116 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13c4;
	fwd -> node_0x13cd;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xde9 */
node cpu node_0xdea {			/* next @ 0xe03 */
	id = 0x75;		/* 117 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13c4;
	fwd -> node_0x13cd;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xe02 */
node cpu node_0xe03 {			/* next @ 0xe1c */
	id = 0x76;		/* 118 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13c4;
	fwd -> node_0x13cd;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xe1b */
node cpu node_0xe1c {			/* next @ 0xe35 */
	id = 0x77;		/* 119 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13c4;
	fwd -> node_0x13cd;
	fwd -> node_0x14ba;
	fwd -> node_0x161a;
	fwd -> node_0x156a;
	fwd -> node_0x6b;
}					/* @ 0xe34 */
node cpu node_0xe35 {			/* next @ 0xe4e */
	id = 0x78;		/* 120 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13fc;
	fwd -> node_0x1405;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xe4d */
node cpu node_0xe4e {			/* next @ 0xe67 */
	id = 0x79;		/* 121 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13fc;
	fwd -> node_0x1405;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xe66 */
node cpu node_0xe67 {			/* next @ 0xe80 */
	id = 0x7a;		/* 122 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13fc;
	fwd -> node_0x1405;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xe7f */
node cpu node_0xe80 {			/* next @ 0xe99 */
	id = 0x7b;		/* 123 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x13fc;
	fwd -> node_0x1405;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xe98 */
node cpu node_0xe99 {			/* next @ 0xeb2 */
	id = 0x7c;		/* 124 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x140e;
	fwd -> node_0x1417;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xeb1 */
node cpu node_0xeb2 {			/* next @ 0xecb */
	id = 0x7d;		/* 125 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x140e;
	fwd -> node_0x1417;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xeca */
node cpu node_0xecb {			/* next @ 0xee4 */
	id = 0x7e;		/* 126 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x140e;
	fwd -> node_0x1417;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xee3 */
node cpu node_0xee4 {			/* next @ 0xefd */
	id = 0x7f;		/* 127 */
	isalist = {

		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39, 0x00,
		0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x38, 0x70,
		0x6c, 0x75, 0x73, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x00, 0x73, 0x70, 0x61, 0x72,
		0x63, 0x76, 0x38, 0x2d, 0x66, 0x73, 0x6d, 0x75,
		0x6c, 0x64, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x76, 0x37, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63,
		0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76, 0x39,
		0x2b, 0x76, 0x69, 0x73, 0x00, 0x73, 0x70, 0x61,
		0x72, 0x63, 0x76, 0x39, 0x2b, 0x76, 0x69, 0x73,
		0x32, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x00, 0x73, 0x70, 0x61, 0x72, 0x63, 0x76,
		0x38, 0x70, 0x6c, 0x75, 0x73, 0x2b, 0x76, 0x69,
		0x73, 0x32, 0x00 };
	clock-frequency = 0x4542b680;		/* 1162000000 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x55, 0x6c, 0x74,
		0x72, 0x61, 0x53, 0x50, 0x41, 0x52, 0x43, 0x2d,
		0x54, 0x32, 0x2b, 0x00, 0x53, 0x55, 0x4e, 0x57,
		0x2c, 0x55, 0x6c, 0x74, 0x72, 0x61, 0x53, 0x50,
		0x41, 0x52, 0x43, 0x2d, 0x54, 0x32, 0x00, 0x53,
		0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e, 0x34,
		0x76, 0x2d, 0x63, 0x70, 0x75, 0x00, 0x73, 0x75,
		0x6e, 0x34, 0x76, 0x00 };
	nwins = 0x8;		/* 8 */
	mmu-type = "sun4v";
	mmu-compatible = "";
	mmu-#context-bits = 0xd;		/* 13 */
	mmu-#shared-contexts = 0x1;		/* 1 */
	mmu-max-#tsbs = 0x4;		/* 4 */
	mmu-page-size-list = 0x2b;		/* 43 */
	mmu-#va-bits = 0x30;		/* 48 */
	q-cpu-mondo-#bits = 0xc;		/* 12 */
	q-dev-mondo-#bits = 0xc;		/* 12 */
	q-resumable-#bits = 0xc;		/* 12 */
	q-nonresumable-#bits = 0xc;		/* 12 */
	back -> node_0xefd;
	fwd -> node_0x140e;
	fwd -> node_0x1417;
	fwd -> node_0x14c5;
	fwd -> node_0x1625;
	fwd -> node_0x1575;
	fwd -> node_0x6b;
}					/* @ 0xefc */
node cpus node_0xefd {			/* next @ 0xf80 */
	fwd -> node_0x27d;
	fwd -> node_0x296;
	fwd -> node_0x2af;
	fwd -> node_0x2c8;
	fwd -> node_0x2e1;
	fwd -> node_0x2fa;
	fwd -> node_0x313;
	fwd -> node_0x32c;
	fwd -> node_0x345;
	fwd -> node_0x35e;
	fwd -> node_0x377;
	fwd -> node_0x390;
	fwd -> node_0x3a9;
	fwd -> node_0x3c2;
	fwd -> node_0x3db;
	fwd -> node_0x3f4;
	fwd -> node_0x40d;
	fwd -> node_0x426;
	fwd -> node_0x43f;
	fwd -> node_0x458;
	fwd -> node_0x471;
	fwd -> node_0x48a;
	fwd -> node_0x4a3;
	fwd -> node_0x4bc;
	fwd -> node_0x4d5;
	fwd -> node_0x4ee;
	fwd -> node_0x507;
	fwd -> node_0x520;
	fwd -> node_0x539;
	fwd -> node_0x552;
	fwd -> node_0x56b;
	fwd -> node_0x584;
	fwd -> node_0x59d;
	fwd -> node_0x5b6;
	fwd -> node_0x5cf;
	fwd -> node_0x5e8;
	fwd -> node_0x601;
	fwd -> node_0x61a;
	fwd -> node_0x633;
	fwd -> node_0x64c;
	fwd -> node_0x665;
	fwd -> node_0x67e;
	fwd -> node_0x697;
	fwd -> node_0x6b0;
	fwd -> node_0x6c9;
	fwd -> node_0x6e2;
	fwd -> node_0x6fb;
	fwd -> node_0x714;
	fwd -> node_0x72d;
	fwd -> node_0x746;
	fwd -> node_0x75f;
	fwd -> node_0x778;
	fwd -> node_0x791;
	fwd -> node_0x7aa;
	fwd -> node_0x7c3;
	fwd -> node_0x7dc;
	fwd -> node_0x7f5;
	fwd -> node_0x80e;
	fwd -> node_0x827;
	fwd -> node_0x840;
	fwd -> node_0x859;
	fwd -> node_0x872;
	fwd -> node_0x88b;
	fwd -> node_0x8a4;
	fwd -> node_0x8bd;
	fwd -> node_0x8d6;
	fwd -> node_0x8ef;
	fwd -> node_0x908;
	fwd -> node_0x921;
	fwd -> node_0x93a;
	fwd -> node_0x953;
	fwd -> node_0x96c;
	fwd -> node_0x985;
	fwd -> node_0x99e;
	fwd -> node_0x9b7;
	fwd -> node_0x9d0;
	fwd -> node_0x9e9;
	fwd -> node_0xa02;
	fwd -> node_0xa1b;
	fwd -> node_0xa34;
	fwd -> node_0xa4d;
	fwd -> node_0xa66;
	fwd -> node_0xa7f;
	fwd -> node_0xa98;
	fwd -> node_0xab1;
	fwd -> node_0xaca;
	fwd -> node_0xae3;
	fwd -> node_0xafc;
	fwd -> node_0xb15;
	fwd -> node_0xb2e;
	fwd -> node_0xb47;
	fwd -> node_0xb60;
	fwd -> node_0xb79;
	fwd -> node_0xb92;
	fwd -> node_0xbab;
	fwd -> node_0xbc4;
	fwd -> node_0xbdd;
	fwd -> node_0xbf6;
	fwd -> node_0xc0f;
	fwd -> node_0xc28;
	fwd -> node_0xc41;
	fwd -> node_0xc5a;
	fwd -> node_0xc73;
	fwd -> node_0xc8c;
	fwd -> node_0xca5;
	fwd -> node_0xcbe;
	fwd -> node_0xcd7;
	fwd -> node_0xcf0;
	fwd -> node_0xd09;
	fwd -> node_0xd22;
	fwd -> node_0xd3b;
	fwd -> node_0xd54;
	fwd -> node_0xd6d;
	fwd -> node_0xd86;
	fwd -> node_0xd9f;
	fwd -> node_0xdb8;
	fwd -> node_0xdd1;
	fwd -> node_0xdea;
	fwd -> node_0xe03;
	fwd -> node_0xe1c;
	fwd -> node_0xe35;
	fwd -> node_0xe4e;
	fwd -> node_0xe67;
	fwd -> node_0xe80;
	fwd -> node_0xe99;
	fwd -> node_0xeb2;
	fwd -> node_0xecb;
	fwd -> node_0xee4;
	back -> node_0x0;
}					/* @ 0xf7f */
node cache node_0xf80 {			/* next @ 0xf8a */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0xfa6;
	back -> node_0xfb8;
	fwd -> node_0x1630;
}					/* @ 0xf89 */
node cache node_0xf8a {			/* next @ 0xf94 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0xfaf;
	back -> node_0xfc1;
	fwd -> node_0x1630;
}					/* @ 0xf93 */
node tlb node_0xf94 {			/* next @ 0xf9d */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0xfa6;
	back -> node_0xfb8;
}					/* @ 0xf9c */
node tlb node_0xf9d {			/* next @ 0xfa6 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0xfaf;
	back -> node_0xfc1;
}					/* @ 0xfa5 */
node exec-unit node_0xfa6 {			/* next @ 0xfaf */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	fwd -> node_0xf80;
	fwd -> node_0xf94;
}					/* @ 0xfae */
node exec-unit node_0xfaf {			/* next @ 0xfb8 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	fwd -> node_0xf8a;
	fwd -> node_0xf9d;
}					/* @ 0xfb7 */
node exec-unit node_0xfb8 {			/* next @ 0xfc1 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
	fwd -> node_0xf80;
	fwd -> node_0xf94;
}					/* @ 0xfc0 */
node exec-unit node_0xfc1 {			/* next @ 0xfca */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
	fwd -> node_0xf8a;
	fwd -> node_0xf9d;
}					/* @ 0xfc9 */
node cache node_0xfca {			/* next @ 0xfd4 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0xff0;
	back -> node_0x1002;
	fwd -> node_0x1630;
}					/* @ 0xfd3 */
node cache node_0xfd4 {			/* next @ 0xfde */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0xff9;
	back -> node_0x100b;
	fwd -> node_0x1630;
}					/* @ 0xfdd */
node tlb node_0xfde {			/* next @ 0xfe7 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0xff0;
	back -> node_0x1002;
}					/* @ 0xfe6 */
node tlb node_0xfe7 {			/* next @ 0xff0 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0xff9;
	back -> node_0x100b;
}					/* @ 0xfef */
node exec-unit node_0xff0 {			/* next @ 0xff9 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	fwd -> node_0xfca;
	fwd -> node_0xfde;
}					/* @ 0xff8 */
node exec-unit node_0xff9 {			/* next @ 0x1002 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	fwd -> node_0xfd4;
	fwd -> node_0xfe7;
}					/* @ 0x1001 */
node exec-unit node_0x1002 {			/* next @ 0x100b */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
	fwd -> node_0xfca;
	fwd -> node_0xfde;
}					/* @ 0x100a */
node exec-unit node_0x100b {			/* next @ 0x1014 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
	fwd -> node_0xfd4;
	fwd -> node_0xfe7;
}					/* @ 0x1013 */
node cache node_0x1014 {			/* next @ 0x101e */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x103a;
	back -> node_0x104c;
	fwd -> node_0x1630;
}					/* @ 0x101d */
node cache node_0x101e {			/* next @ 0x1028 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1043;
	back -> node_0x1055;
	fwd -> node_0x1630;
}					/* @ 0x1027 */
node tlb node_0x1028 {			/* next @ 0x1031 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x103a;
	back -> node_0x104c;
}					/* @ 0x1030 */
node tlb node_0x1031 {			/* next @ 0x103a */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1043;
	back -> node_0x1055;
}					/* @ 0x1039 */
node exec-unit node_0x103a {			/* next @ 0x1043 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	fwd -> node_0x1014;
	fwd -> node_0x1028;
}					/* @ 0x1042 */
node exec-unit node_0x1043 {			/* next @ 0x104c */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	fwd -> node_0x101e;
	fwd -> node_0x1031;
}					/* @ 0x104b */
node exec-unit node_0x104c {			/* next @ 0x1055 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
	fwd -> node_0x1014;
	fwd -> node_0x1028;
}					/* @ 0x1054 */
node exec-unit node_0x1055 {			/* next @ 0x105e */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
	fwd -> node_0x101e;
	fwd -> node_0x1031;
}					/* @ 0x105d */
node cache node_0x105e {			/* next @ 0x1068 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x1084;
	back -> node_0x1096;
	fwd -> node_0x1630;
}					/* @ 0x1067 */
node cache node_0x1068 {			/* next @ 0x1072 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x108d;
	back -> node_0x109f;
	fwd -> node_0x1630;
}					/* @ 0x1071 */
node tlb node_0x1072 {			/* next @ 0x107b */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1084;
	back -> node_0x1096;
}					/* @ 0x107a */
node tlb node_0x107b {			/* next @ 0x1084 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x108d;
	back -> node_0x109f;
}					/* @ 0x1083 */
node exec-unit node_0x1084 {			/* next @ 0x108d */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	fwd -> node_0x105e;
	fwd -> node_0x1072;
}					/* @ 0x108c */
node exec-unit node_0x108d {			/* next @ 0x1096 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	fwd -> node_0x1068;
	fwd -> node_0x107b;
}					/* @ 0x1095 */
node exec-unit node_0x1096 {			/* next @ 0x109f */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
	fwd -> node_0x105e;
	fwd -> node_0x1072;
}					/* @ 0x109e */
node exec-unit node_0x109f {			/* next @ 0x10a8 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
	fwd -> node_0x1068;
	fwd -> node_0x107b;
}					/* @ 0x10a7 */
node cache node_0x10a8 {			/* next @ 0x10b2 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x10ce;
	back -> node_0x10e0;
	fwd -> node_0x1630;
}					/* @ 0x10b1 */
node cache node_0x10b2 {			/* next @ 0x10bc */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x10d7;
	back -> node_0x10e9;
	fwd -> node_0x1630;
}					/* @ 0x10bb */
node tlb node_0x10bc {			/* next @ 0x10c5 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x10ce;
	back -> node_0x10e0;
}					/* @ 0x10c4 */
node tlb node_0x10c5 {			/* next @ 0x10ce */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x10d7;
	back -> node_0x10e9;
}					/* @ 0x10cd */
node exec-unit node_0x10ce {			/* next @ 0x10d7 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	fwd -> node_0x10a8;
	fwd -> node_0x10bc;
}					/* @ 0x10d6 */
node exec-unit node_0x10d7 {			/* next @ 0x10e0 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	fwd -> node_0x10b2;
	fwd -> node_0x10c5;
}					/* @ 0x10df */
node exec-unit node_0x10e0 {			/* next @ 0x10e9 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
	fwd -> node_0x10a8;
	fwd -> node_0x10bc;
}					/* @ 0x10e8 */
node exec-unit node_0x10e9 {			/* next @ 0x10f2 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
	fwd -> node_0x10b2;
	fwd -> node_0x10c5;
}					/* @ 0x10f1 */
node cache node_0x10f2 {			/* next @ 0x10fc */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x1118;
	back -> node_0x112a;
	fwd -> node_0x1630;
}					/* @ 0x10fb */
node cache node_0x10fc {			/* next @ 0x1106 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1121;
	back -> node_0x1133;
	fwd -> node_0x1630;
}					/* @ 0x1105 */
node tlb node_0x1106 {			/* next @ 0x110f */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1118;
	back -> node_0x112a;
}					/* @ 0x110e */
node tlb node_0x110f {			/* next @ 0x1118 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1121;
	back -> node_0x1133;
}					/* @ 0x1117 */
node exec-unit node_0x1118 {			/* next @ 0x1121 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	fwd -> node_0x10f2;
	fwd -> node_0x1106;
}					/* @ 0x1120 */
node exec-unit node_0x1121 {			/* next @ 0x112a */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	fwd -> node_0x10fc;
	fwd -> node_0x110f;
}					/* @ 0x1129 */
node exec-unit node_0x112a {			/* next @ 0x1133 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
	fwd -> node_0x10f2;
	fwd -> node_0x1106;
}					/* @ 0x1132 */
node exec-unit node_0x1133 {			/* next @ 0x113c */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
	fwd -> node_0x10fc;
	fwd -> node_0x110f;
}					/* @ 0x113b */
node cache node_0x113c {			/* next @ 0x1146 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x1162;
	back -> node_0x1174;
	fwd -> node_0x1630;
}					/* @ 0x1145 */
node cache node_0x1146 {			/* next @ 0x1150 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x116b;
	back -> node_0x117d;
	fwd -> node_0x1630;
}					/* @ 0x114f */
node tlb node_0x1150 {			/* next @ 0x1159 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1162;
	back -> node_0x1174;
}					/* @ 0x1158 */
node tlb node_0x1159 {			/* next @ 0x1162 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x116b;
	back -> node_0x117d;
}					/* @ 0x1161 */
node exec-unit node_0x1162 {			/* next @ 0x116b */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	fwd -> node_0x113c;
	fwd -> node_0x1150;
}					/* @ 0x116a */
node exec-unit node_0x116b {			/* next @ 0x1174 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	fwd -> node_0x1146;
	fwd -> node_0x1159;
}					/* @ 0x1173 */
node exec-unit node_0x1174 {			/* next @ 0x117d */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
	fwd -> node_0x113c;
	fwd -> node_0x1150;
}					/* @ 0x117c */
node exec-unit node_0x117d {			/* next @ 0x1186 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
	fwd -> node_0x1146;
	fwd -> node_0x1159;
}					/* @ 0x1185 */
node cache node_0x1186 {			/* next @ 0x1190 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x11ac;
	back -> node_0x11be;
	fwd -> node_0x1630;
}					/* @ 0x118f */
node cache node_0x1190 {			/* next @ 0x119a */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x11b5;
	back -> node_0x11c7;
	fwd -> node_0x1630;
}					/* @ 0x1199 */
node tlb node_0x119a {			/* next @ 0x11a3 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x11ac;
	back -> node_0x11be;
}					/* @ 0x11a2 */
node tlb node_0x11a3 {			/* next @ 0x11ac */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x11b5;
	back -> node_0x11c7;
}					/* @ 0x11ab */
node exec-unit node_0x11ac {			/* next @ 0x11b5 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	fwd -> node_0x1186;
	fwd -> node_0x119a;
}					/* @ 0x11b4 */
node exec-unit node_0x11b5 {			/* next @ 0x11be */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	fwd -> node_0x1190;
	fwd -> node_0x11a3;
}					/* @ 0x11bd */
node exec-unit node_0x11be {			/* next @ 0x11c7 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
	fwd -> node_0x1186;
	fwd -> node_0x119a;
}					/* @ 0x11c6 */
node exec-unit node_0x11c7 {			/* next @ 0x11d0 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
	fwd -> node_0x1190;
	fwd -> node_0x11a3;
}					/* @ 0x11cf */
node cache node_0x11d0 {			/* next @ 0x11da */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x11f6;
	back -> node_0x1208;
	fwd -> node_0x1648;
}					/* @ 0x11d9 */
node cache node_0x11da {			/* next @ 0x11e4 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x11ff;
	back -> node_0x1211;
	fwd -> node_0x1648;
}					/* @ 0x11e3 */
node tlb node_0x11e4 {			/* next @ 0x11ed */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x11f6;
	back -> node_0x1208;
}					/* @ 0x11ec */
node tlb node_0x11ed {			/* next @ 0x11f6 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x11ff;
	back -> node_0x1211;
}					/* @ 0x11f5 */
node exec-unit node_0x11f6 {			/* next @ 0x11ff */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	fwd -> node_0x11d0;
	fwd -> node_0x11e4;
}					/* @ 0x11fe */
node exec-unit node_0x11ff {			/* next @ 0x1208 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	fwd -> node_0x11da;
	fwd -> node_0x11ed;
}					/* @ 0x1207 */
node exec-unit node_0x1208 {			/* next @ 0x1211 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
	fwd -> node_0x11d0;
	fwd -> node_0x11e4;
}					/* @ 0x1210 */
node exec-unit node_0x1211 {			/* next @ 0x121a */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
	fwd -> node_0x11da;
	fwd -> node_0x11ed;
}					/* @ 0x1219 */
node cache node_0x121a {			/* next @ 0x1224 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x1240;
	back -> node_0x1252;
	fwd -> node_0x1648;
}					/* @ 0x1223 */
node cache node_0x1224 {			/* next @ 0x122e */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1249;
	back -> node_0x125b;
	fwd -> node_0x1648;
}					/* @ 0x122d */
node tlb node_0x122e {			/* next @ 0x1237 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1240;
	back -> node_0x1252;
}					/* @ 0x1236 */
node tlb node_0x1237 {			/* next @ 0x1240 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1249;
	back -> node_0x125b;
}					/* @ 0x123f */
node exec-unit node_0x1240 {			/* next @ 0x1249 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	fwd -> node_0x121a;
	fwd -> node_0x122e;
}					/* @ 0x1248 */
node exec-unit node_0x1249 {			/* next @ 0x1252 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	fwd -> node_0x1224;
	fwd -> node_0x1237;
}					/* @ 0x1251 */
node exec-unit node_0x1252 {			/* next @ 0x125b */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
	fwd -> node_0x121a;
	fwd -> node_0x122e;
}					/* @ 0x125a */
node exec-unit node_0x125b {			/* next @ 0x1264 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
	fwd -> node_0x1224;
	fwd -> node_0x1237;
}					/* @ 0x1263 */
node cache node_0x1264 {			/* next @ 0x126e */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x128a;
	back -> node_0x129c;
	fwd -> node_0x1648;
}					/* @ 0x126d */
node cache node_0x126e {			/* next @ 0x1278 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1293;
	back -> node_0x12a5;
	fwd -> node_0x1648;
}					/* @ 0x1277 */
node tlb node_0x1278 {			/* next @ 0x1281 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x128a;
	back -> node_0x129c;
}					/* @ 0x1280 */
node tlb node_0x1281 {			/* next @ 0x128a */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1293;
	back -> node_0x12a5;
}					/* @ 0x1289 */
node exec-unit node_0x128a {			/* next @ 0x1293 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	fwd -> node_0x1264;
	fwd -> node_0x1278;
}					/* @ 0x1292 */
node exec-unit node_0x1293 {			/* next @ 0x129c */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	fwd -> node_0x126e;
	fwd -> node_0x1281;
}					/* @ 0x129b */
node exec-unit node_0x129c {			/* next @ 0x12a5 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
	fwd -> node_0x1264;
	fwd -> node_0x1278;
}					/* @ 0x12a4 */
node exec-unit node_0x12a5 {			/* next @ 0x12ae */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
	fwd -> node_0x126e;
	fwd -> node_0x1281;
}					/* @ 0x12ad */
node cache node_0x12ae {			/* next @ 0x12b8 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x12d4;
	back -> node_0x12e6;
	fwd -> node_0x1648;
}					/* @ 0x12b7 */
node cache node_0x12b8 {			/* next @ 0x12c2 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x12dd;
	back -> node_0x12ef;
	fwd -> node_0x1648;
}					/* @ 0x12c1 */
node tlb node_0x12c2 {			/* next @ 0x12cb */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x12d4;
	back -> node_0x12e6;
}					/* @ 0x12ca */
node tlb node_0x12cb {			/* next @ 0x12d4 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x12dd;
	back -> node_0x12ef;
}					/* @ 0x12d3 */
node exec-unit node_0x12d4 {			/* next @ 0x12dd */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	fwd -> node_0x12ae;
	fwd -> node_0x12c2;
}					/* @ 0x12dc */
node exec-unit node_0x12dd {			/* next @ 0x12e6 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	fwd -> node_0x12b8;
	fwd -> node_0x12cb;
}					/* @ 0x12e5 */
node exec-unit node_0x12e6 {			/* next @ 0x12ef */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
	fwd -> node_0x12ae;
	fwd -> node_0x12c2;
}					/* @ 0x12ee */
node exec-unit node_0x12ef {			/* next @ 0x12f8 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
	fwd -> node_0x12b8;
	fwd -> node_0x12cb;
}					/* @ 0x12f7 */
node cache node_0x12f8 {			/* next @ 0x1302 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x131e;
	back -> node_0x1330;
	fwd -> node_0x1648;
}					/* @ 0x1301 */
node cache node_0x1302 {			/* next @ 0x130c */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1327;
	back -> node_0x1339;
	fwd -> node_0x1648;
}					/* @ 0x130b */
node tlb node_0x130c {			/* next @ 0x1315 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x131e;
	back -> node_0x1330;
}					/* @ 0x1314 */
node tlb node_0x1315 {			/* next @ 0x131e */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1327;
	back -> node_0x1339;
}					/* @ 0x131d */
node exec-unit node_0x131e {			/* next @ 0x1327 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	fwd -> node_0x12f8;
	fwd -> node_0x130c;
}					/* @ 0x1326 */
node exec-unit node_0x1327 {			/* next @ 0x1330 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	fwd -> node_0x1302;
	fwd -> node_0x1315;
}					/* @ 0x132f */
node exec-unit node_0x1330 {			/* next @ 0x1339 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
	fwd -> node_0x12f8;
	fwd -> node_0x130c;
}					/* @ 0x1338 */
node exec-unit node_0x1339 {			/* next @ 0x1342 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
	fwd -> node_0x1302;
	fwd -> node_0x1315;
}					/* @ 0x1341 */
node cache node_0x1342 {			/* next @ 0x134c */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x1368;
	back -> node_0x137a;
	fwd -> node_0x1648;
}					/* @ 0x134b */
node cache node_0x134c {			/* next @ 0x1356 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1371;
	back -> node_0x1383;
	fwd -> node_0x1648;
}					/* @ 0x1355 */
node tlb node_0x1356 {			/* next @ 0x135f */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1368;
	back -> node_0x137a;
}					/* @ 0x135e */
node tlb node_0x135f {			/* next @ 0x1368 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1371;
	back -> node_0x1383;
}					/* @ 0x1367 */
node exec-unit node_0x1368 {			/* next @ 0x1371 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	fwd -> node_0x1342;
	fwd -> node_0x1356;
}					/* @ 0x1370 */
node exec-unit node_0x1371 {			/* next @ 0x137a */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	fwd -> node_0x134c;
	fwd -> node_0x135f;
}					/* @ 0x1379 */
node exec-unit node_0x137a {			/* next @ 0x1383 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
	fwd -> node_0x1342;
	fwd -> node_0x1356;
}					/* @ 0x1382 */
node exec-unit node_0x1383 {			/* next @ 0x138c */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
	fwd -> node_0x134c;
	fwd -> node_0x135f;
}					/* @ 0x138b */
node cache node_0x138c {			/* next @ 0x1396 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x13b2;
	back -> node_0x13c4;
	fwd -> node_0x1648;
}					/* @ 0x1395 */
node cache node_0x1396 {			/* next @ 0x13a0 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x13bb;
	back -> node_0x13cd;
	fwd -> node_0x1648;
}					/* @ 0x139f */
node tlb node_0x13a0 {			/* next @ 0x13a9 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x13b2;
	back -> node_0x13c4;
}					/* @ 0x13a8 */
node tlb node_0x13a9 {			/* next @ 0x13b2 */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x13bb;
	back -> node_0x13cd;
}					/* @ 0x13b1 */
node exec-unit node_0x13b2 {			/* next @ 0x13bb */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	fwd -> node_0x138c;
	fwd -> node_0x13a0;
}					/* @ 0x13ba */
node exec-unit node_0x13bb {			/* next @ 0x13c4 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	fwd -> node_0x1396;
	fwd -> node_0x13a9;
}					/* @ 0x13c3 */
node exec-unit node_0x13c4 {			/* next @ 0x13cd */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
	fwd -> node_0x138c;
	fwd -> node_0x13a0;
}					/* @ 0x13cc */
node exec-unit node_0x13cd {			/* next @ 0x13d6 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
	fwd -> node_0x1396;
	fwd -> node_0x13a9;
}					/* @ 0x13d5 */
node cache node_0x13d6 {			/* next @ 0x13e0 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	line-size = 0x20;		/* 32 */
	size = 0x4000;		/* 16384 */
	associativity = 0x8;		/* 8 */
	back -> node_0x13fc;
	back -> node_0x140e;
	fwd -> node_0x1648;
}					/* @ 0x13df */
node cache node_0x13e0 {			/* next @ 0x13ea */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	line-size = 0x10;		/* 16 */
	size = 0x2000;		/* 8192 */
	associativity = 0x4;		/* 4 */
	back -> node_0x1405;
	back -> node_0x1417;
	fwd -> node_0x1648;
}					/* @ 0x13e9 */
node tlb node_0x13ea {			/* next @ 0x13f3 */
	level = 0x1;		/* 1 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00 };
	entries = 0x40;		/* 64 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x13fc;
	back -> node_0x140e;
}					/* @ 0x13f2 */
node tlb node_0x13f3 {			/* next @ 0x13fc */
	level = 0x1;		/* 1 */
	type = {

		0x64, 0x61, 0x74, 0x61, 0x00 };
	entries = 0x80;		/* 128 */
	associativity = 0x0;		/* 0 */
	page-size-list = 0x2b;		/* 43 */
	back -> node_0x1405;
	back -> node_0x1417;
}					/* @ 0x13fb */
node exec-unit node_0x13fc {			/* next @ 0x1405 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	fwd -> node_0x13d6;
	fwd -> node_0x13ea;
}					/* @ 0x1404 */
node exec-unit node_0x1405 {			/* next @ 0x140e */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	fwd -> node_0x13e0;
	fwd -> node_0x13f3;
}					/* @ 0x140d */
node exec-unit node_0x140e {			/* next @ 0x1417 */
	type = {

		0x69, 0x66, 0x65, 0x74, 0x63, 0x68, 0x00 };
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
	fwd -> node_0x13d6;
	fwd -> node_0x13ea;
}					/* @ 0x1416 */
node exec-unit node_0x1417 {			/* next @ 0x1420 */
	type = {

		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x00,
		0x69, 0x6e, 0x74, 0x65, 0x67, 0x65, 0x72, 0x2d,
		0x6c, 0x6f, 0x61, 0x64, 0x00, 0x69, 0x6e, 0x74,
		0x65, 0x67, 0x65, 0x72, 0x2d, 0x73, 0x74, 0x6f,
		0x72, 0x65, 0x00, 0x66, 0x70, 0x2d, 0x6c, 0x6f,
		0x61, 0x64, 0x00, 0x66, 0x70, 0x2d, 0x73, 0x74,
		0x6f, 0x72, 0x65, 0x00 };
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
	fwd -> node_0x13e0;
	fwd -> node_0x13f3;
}					/* @ 0x141f */
node exec-unit node_0x1420 {			/* next @ 0x142b */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
}					/* @ 0x142a */
node exec-unit node_0x142b {			/* next @ 0x1436 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
}					/* @ 0x1435 */
node exec-unit node_0x1436 {			/* next @ 0x1441 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
}					/* @ 0x1440 */
node exec-unit node_0x1441 {			/* next @ 0x144c */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
}					/* @ 0x144b */
node exec-unit node_0x144c {			/* next @ 0x1457 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
}					/* @ 0x1456 */
node exec-unit node_0x1457 {			/* next @ 0x1462 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
}					/* @ 0x1461 */
node exec-unit node_0x1462 {			/* next @ 0x146d */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
}					/* @ 0x146c */
node exec-unit node_0x146d {			/* next @ 0x1478 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
}					/* @ 0x1477 */
node exec-unit node_0x1478 {			/* next @ 0x1483 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
}					/* @ 0x1482 */
node exec-unit node_0x1483 {			/* next @ 0x148e */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
}					/* @ 0x148d */
node exec-unit node_0x148e {			/* next @ 0x1499 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
}					/* @ 0x1498 */
node exec-unit node_0x1499 {			/* next @ 0x14a4 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
}					/* @ 0x14a3 */
node exec-unit node_0x14a4 {			/* next @ 0x14af */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
}					/* @ 0x14ae */
node exec-unit node_0x14af {			/* next @ 0x14ba */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
}					/* @ 0x14b9 */
node exec-unit node_0x14ba {			/* next @ 0x14c5 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
}					/* @ 0x14c4 */
node exec-unit node_0x14c5 {			/* next @ 0x14d0 */
	type = {

		0x66, 0x70, 0x00 };
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
}					/* @ 0x14cf */
node exec-unit node_0x14d0 {			/* next @ 0x14db */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
}					/* @ 0x14da */
node exec-unit node_0x14db {			/* next @ 0x14e6 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
}					/* @ 0x14e5 */
node exec-unit node_0x14e6 {			/* next @ 0x14f1 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
}					/* @ 0x14f0 */
node exec-unit node_0x14f1 {			/* next @ 0x14fc */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
}					/* @ 0x14fb */
node exec-unit node_0x14fc {			/* next @ 0x1507 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
}					/* @ 0x1506 */
node exec-unit node_0x1507 {			/* next @ 0x1512 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
}					/* @ 0x1511 */
node exec-unit node_0x1512 {			/* next @ 0x151d */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
}					/* @ 0x151c */
node exec-unit node_0x151d {			/* next @ 0x1528 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
}					/* @ 0x1527 */
node exec-unit node_0x1528 {			/* next @ 0x1533 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
}					/* @ 0x1532 */
node exec-unit node_0x1533 {			/* next @ 0x153e */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
}					/* @ 0x153d */
node exec-unit node_0x153e {			/* next @ 0x1549 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
}					/* @ 0x1548 */
node exec-unit node_0x1549 {			/* next @ 0x1554 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
}					/* @ 0x1553 */
node exec-unit node_0x1554 {			/* next @ 0x155f */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
}					/* @ 0x155e */
node exec-unit node_0x155f {			/* next @ 0x156a */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
}					/* @ 0x1569 */
node exec-unit node_0x156a {			/* next @ 0x1575 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
}					/* @ 0x1574 */
node exec-unit node_0x1575 {			/* next @ 0x1580 */
	type = {

		0x63, 0x77, 0x71, 0x00 };
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
}					/* @ 0x157f */
node exec-unit node_0x1580 {			/* next @ 0x158b */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x27d;
	back -> node_0x296;
	back -> node_0x2af;
	back -> node_0x2c8;
	back -> node_0x2e1;
	back -> node_0x2fa;
	back -> node_0x313;
	back -> node_0x32c;
}					/* @ 0x158a */
node exec-unit node_0x158b {			/* next @ 0x1596 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x345;
	back -> node_0x35e;
	back -> node_0x377;
	back -> node_0x390;
	back -> node_0x3a9;
	back -> node_0x3c2;
	back -> node_0x3db;
	back -> node_0x3f4;
}					/* @ 0x1595 */
node exec-unit node_0x1596 {			/* next @ 0x15a1 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x40d;
	back -> node_0x426;
	back -> node_0x43f;
	back -> node_0x458;
	back -> node_0x471;
	back -> node_0x48a;
	back -> node_0x4a3;
	back -> node_0x4bc;
}					/* @ 0x15a0 */
node exec-unit node_0x15a1 {			/* next @ 0x15ac */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x4d5;
	back -> node_0x4ee;
	back -> node_0x507;
	back -> node_0x520;
	back -> node_0x539;
	back -> node_0x552;
	back -> node_0x56b;
	back -> node_0x584;
}					/* @ 0x15ab */
node exec-unit node_0x15ac {			/* next @ 0x15b7 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x59d;
	back -> node_0x5b6;
	back -> node_0x5cf;
	back -> node_0x5e8;
	back -> node_0x601;
	back -> node_0x61a;
	back -> node_0x633;
	back -> node_0x64c;
}					/* @ 0x15b6 */
node exec-unit node_0x15b7 {			/* next @ 0x15c2 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x665;
	back -> node_0x67e;
	back -> node_0x697;
	back -> node_0x6b0;
	back -> node_0x6c9;
	back -> node_0x6e2;
	back -> node_0x6fb;
	back -> node_0x714;
}					/* @ 0x15c1 */
node exec-unit node_0x15c2 {			/* next @ 0x15cd */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x72d;
	back -> node_0x746;
	back -> node_0x75f;
	back -> node_0x778;
	back -> node_0x791;
	back -> node_0x7aa;
	back -> node_0x7c3;
	back -> node_0x7dc;
}					/* @ 0x15cc */
node exec-unit node_0x15cd {			/* next @ 0x15d8 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x7f5;
	back -> node_0x80e;
	back -> node_0x827;
	back -> node_0x840;
	back -> node_0x859;
	back -> node_0x872;
	back -> node_0x88b;
	back -> node_0x8a4;
}					/* @ 0x15d7 */
node exec-unit node_0x15d8 {			/* next @ 0x15e3 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x8bd;
	back -> node_0x8d6;
	back -> node_0x8ef;
	back -> node_0x908;
	back -> node_0x921;
	back -> node_0x93a;
	back -> node_0x953;
	back -> node_0x96c;
}					/* @ 0x15e2 */
node exec-unit node_0x15e3 {			/* next @ 0x15ee */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0x985;
	back -> node_0x99e;
	back -> node_0x9b7;
	back -> node_0x9d0;
	back -> node_0x9e9;
	back -> node_0xa02;
	back -> node_0xa1b;
	back -> node_0xa34;
}					/* @ 0x15ed */
node exec-unit node_0x15ee {			/* next @ 0x15f9 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xa4d;
	back -> node_0xa66;
	back -> node_0xa7f;
	back -> node_0xa98;
	back -> node_0xab1;
	back -> node_0xaca;
	back -> node_0xae3;
	back -> node_0xafc;
}					/* @ 0x15f8 */
node exec-unit node_0x15f9 {			/* next @ 0x1604 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xb15;
	back -> node_0xb2e;
	back -> node_0xb47;
	back -> node_0xb60;
	back -> node_0xb79;
	back -> node_0xb92;
	back -> node_0xbab;
	back -> node_0xbc4;
}					/* @ 0x1603 */
node exec-unit node_0x1604 {			/* next @ 0x160f */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xbdd;
	back -> node_0xbf6;
	back -> node_0xc0f;
	back -> node_0xc28;
	back -> node_0xc41;
	back -> node_0xc5a;
	back -> node_0xc73;
	back -> node_0xc8c;
}					/* @ 0x160e */
node exec-unit node_0x160f {			/* next @ 0x161a */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xca5;
	back -> node_0xcbe;
	back -> node_0xcd7;
	back -> node_0xcf0;
	back -> node_0xd09;
	back -> node_0xd22;
	back -> node_0xd3b;
	back -> node_0xd54;
}					/* @ 0x1619 */
node exec-unit node_0x161a {			/* next @ 0x1625 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xd6d;
	back -> node_0xd86;
	back -> node_0xd9f;
	back -> node_0xdb8;
	back -> node_0xdd1;
	back -> node_0xdea;
	back -> node_0xe03;
	back -> node_0xe1c;
}					/* @ 0x1624 */
node exec-unit node_0x1625 {			/* next @ 0x1630 */
	type = {

		0x6d, 0x61, 0x75, 0x00 };
	back -> node_0xe35;
	back -> node_0xe4e;
	back -> node_0xe67;
	back -> node_0xe80;
	back -> node_0xe99;
	back -> node_0xeb2;
	back -> node_0xecb;
	back -> node_0xee4;
}					/* @ 0x162f */
node cache node_0x1630 {			/* next @ 0x1648 */
	level = 0x2;		/* 2 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00, 0x64, 0x61,
		0x74, 0x61, 0x00 };
	line-size = 0x40;		/* 64 */
	size = 0x400000;		/* 4194304 */
	associativity = 0x10;		/* 16 */
	index-mask = 0x1f00fffc0;		/* 8322547648 */
	back -> node_0xf8a;
	back -> node_0xf80;
	back -> node_0xfd4;
	back -> node_0xfca;
	back -> node_0x101e;
	back -> node_0x1014;
	back -> node_0x1068;
	back -> node_0x105e;
	back -> node_0x10b2;
	back -> node_0x10a8;
	back -> node_0x10fc;
	back -> node_0x10f2;
	back -> node_0x1146;
	back -> node_0x113c;
	back -> node_0x1190;
	back -> node_0x1186;
}					/* @ 0x1647 */
node cache node_0x1648 {			/* next @ 0x1660 */
	level = 0x2;		/* 2 */
	type = {

		0x69, 0x6e, 0x73, 0x74, 0x6e, 0x00, 0x64, 0x61,
		0x74, 0x61, 0x00 };
	line-size = 0x40;		/* 64 */
	size = 0x400000;		/* 4194304 */
	associativity = 0x10;		/* 16 */
	index-mask = 0x1f00fffc0;		/* 8322547648 */
	back -> node_0x11da;
	back -> node_0x11d0;
	back -> node_0x1224;
	back -> node_0x121a;
	back -> node_0x126e;
	back -> node_0x1264;
	back -> node_0x12b8;
	back -> node_0x12ae;
	back -> node_0x1302;
	back -> node_0x12f8;
	back -> node_0x134c;
	back -> node_0x1342;
	back -> node_0x1396;
	back -> node_0x138c;
	back -> node_0x13e0;
	back -> node_0x13d6;
}					/* @ 0x165f */
node iodevice node_0x1660 {			/* next @ 0x1686 */
	name = "pci";
	pseudonym = "pci";
	disabled = 0x0;		/* 0 */
	device-type = "pciex";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x70, 0x63, 0x69, 0x00 };
	cfg-handle = 0x400;		/* 1024 */
	address-ranges = {

		0x00, 0x00, 0x00, 0xc0, 0xf0, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xc1, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xc2, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00 };
	virtual-dma = {

		0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 };
	ino-bitmap = 0xf;		/* 15 */
	probe-list = "0";
	msi-address-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 };
	#msi = 0x100;		/* 256 */
	msi-data-mask = 0xff;		/* 255 */
	msi-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 };
	msi-eq-size = 0x80;		/* 128 */
	msix-data-width = 0x20;		/* 32 */
	#msi-eqs = 0x24;		/* 36 */
	msi-eq-to-devino = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18 };
	interrupts = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e };
	#interrupt-cells = 0x1;		/* 1 */
	interrupt-map-mask = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 };
	bus-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff };
	back -> node_0x17d6;
	fwd -> node_0x17b3;
	fwd -> node_0x17c6;
	fwd -> node_0x16c7;
	fwd -> node_0x16ab;
	fwd -> node_0x16b2;
	fwd -> node_0x16b9;
	fwd -> node_0x16c0;
	fwd -> node_0xc9;
	fwd -> node_0xd8;
	fwd -> node_0x183e;
	fwd -> node_0x1850;
	back -> node_0xb5;
	back -> node_0xc4;
}					/* @ 0x1685 */
node iodevice node_0x1686 {			/* next @ 0x16ab */
	name = "pci";
	pseudonym = "pci";
	disabled = 0x0;		/* 0 */
	device-type = "pciex";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x70, 0x63, 0x69, 0x00 };
	cfg-handle = 0x500;		/* 1280 */
	address-ranges = {

		0x00, 0x00, 0x00, 0xc4, 0xf0, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xc5, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x03, 0xff, 0xff, 0x00, 0x00 };
	virtual-dma = {

		0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00 };
	ino-bitmap = 0xf;		/* 15 */
	probe-list = "0";
	msi-address-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03,
		0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00 };
	#msi = 0x100;		/* 256 */
	msi-data-mask = 0xff;		/* 255 */
	msi-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00 };
	msi-eq-size = 0x80;		/* 128 */
	msix-data-width = 0x20;		/* 32 */
	#msi-eqs = 0x24;		/* 36 */
	msi-eq-to-devino = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x24,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18 };
	interrupts = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3e };
	#interrupt-cells = 0x1;		/* 1 */
	interrupt-map-mask = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xf0, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07 };
	bus-ranges = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xff };
	back -> node_0x17d6;
	fwd -> node_0x17ce;
	fwd -> node_0x1762;
	fwd -> node_0x1746;
	fwd -> node_0x174d;
	fwd -> node_0x1754;
	fwd -> node_0x175b;
	fwd -> node_0xd3;
	fwd -> node_0xce;
	fwd -> node_0x184a;
	fwd -> node_0x1844;
	back -> node_0xbf;
	back -> node_0xba;
}					/* @ 0x16aa */
node interrupt-map-entry node_0x16ab {			/* next @ 0x16b2 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x1;		/* 1 */
	parent-interrupt = 0x14;		/* 20 */
	parent-device-path = "/pci@400";
	back -> node_0x1660;
}					/* @ 0x16b1 */
node interrupt-map-entry node_0x16b2 {			/* next @ 0x16b9 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x2;		/* 2 */
	parent-interrupt = 0x15;		/* 21 */
	parent-device-path = "/pci@400";
	back -> node_0x1660;
}					/* @ 0x16b8 */
node interrupt-map-entry node_0x16b9 {			/* next @ 0x16c0 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x3;		/* 3 */
	parent-interrupt = 0x16;		/* 22 */
	parent-device-path = "/pci@400";
	back -> node_0x1660;
}					/* @ 0x16bf */
node interrupt-map-entry node_0x16c0 {			/* next @ 0x16c7 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x4;		/* 4 */
	parent-interrupt = 0x17;		/* 23 */
	parent-device-path = "/pci@400";
	back -> node_0x1660;
}					/* @ 0x16c6 */
node iodevice node_0x16c7 {			/* next @ 0x16d2 */
	device-type = "pcie-switch-upstream";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x16d2;
	fwd -> node_0x16f4;
	fwd -> node_0x1731;
	fwd -> node_0x1738;
	fwd -> node_0x173f;
	back -> node_0x1660;
}					/* @ 0x16d1 */
node iodevice node_0x16d2 {			/* next @ 0x16d9 */
	device-type = "pcie-switch-downstream";
	device-number = 0x1;		/* 1 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x16d9;
	back -> node_0x16c7;
}					/* @ 0x16d8 */
node iodevice node_0x16d9 {			/* next @ 0x16e2 */
	device-type = "pcie-pcix-bridge";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x16e2;
	fwd -> node_0x16e8;
	fwd -> node_0x16ee;
	back -> node_0x16d2;
}					/* @ 0x16e1 */
node iodevice node_0x16e2 {			/* next @ 0x16e8 */
	device-type = "pci-generic";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	back -> node_0x16d9;
}					/* @ 0x16e7 */
node iodevice node_0x16e8 {			/* next @ 0x16ee */
	device-type = "pci-generic";
	device-number = 0x0;		/* 0 */
	function-number = 0x1;		/* 1 */
	back -> node_0x16d9;
}					/* @ 0x16ed */
node iodevice node_0x16ee {			/* next @ 0x16f4 */
	device-type = "pci-generic";
	device-number = 0x0;		/* 0 */
	function-number = 0x2;		/* 2 */
	back -> node_0x16d9;
}					/* @ 0x16f3 */
node iodevice node_0x16f4 {			/* next @ 0x16fb */
	device-type = "pcie-switch-downstream";
	device-number = 0x8;		/* 8 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x16fb;
	back -> node_0x16c7;
}					/* @ 0x16fa */
node iodevice node_0x16fb {			/* next @ 0x1709 */
	device-type = "pci-scsi";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x1709;
	fwd -> node_0x170e;
	fwd -> node_0x1713;
	fwd -> node_0x1718;
	fwd -> node_0x171d;
	fwd -> node_0x1722;
	fwd -> node_0x1727;
	fwd -> node_0x172c;
	back -> node_0x16f4;
}					/* @ 0x1708 */
node disk_nac node_0x1709 {			/* next @ 0x170e */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@0,0";
	nac_name = "HDD0";
	back -> node_0x16fb;
}					/* @ 0x170d */
node disk_nac node_0x170e {			/* next @ 0x1713 */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@1,0";
	nac_name = "HDD1";
	back -> node_0x16fb;
}					/* @ 0x1712 */
node disk_nac node_0x1713 {			/* next @ 0x1718 */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@2,0";
	nac_name = "HDD2";
	back -> node_0x16fb;
}					/* @ 0x1717 */
node disk_nac node_0x1718 {			/* next @ 0x171d */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@3,0";
	nac_name = "HDD3";
	back -> node_0x16fb;
}					/* @ 0x171c */
node disk_nac node_0x171d {			/* next @ 0x1722 */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@4,0";
	nac_name = "HDD4";
	back -> node_0x16fb;
}					/* @ 0x1721 */
node disk_nac node_0x1722 {			/* next @ 0x1727 */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@5,0";
	nac_name = "HDD5";
	back -> node_0x16fb;
}					/* @ 0x1726 */
node disk_nac node_0x1727 {			/* next @ 0x172c */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@6,0";
	nac_name = "HDD6";
	back -> node_0x16fb;
}					/* @ 0x172b */
node disk_nac node_0x172c {			/* next @ 0x1731 */
	phys_path = "/pci@400/pci@0/pci@8/scsi@0/sd@7,0";
	nac_name = "HDD7";
	back -> node_0x16fb;
}					/* @ 0x1730 */
node iodevice node_0x1731 {			/* next @ 0x1738 */
	device-type = "pcie-switch-downstream";
	device-number = 0x9;		/* 9 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x16c7;
}					/* @ 0x1737 */
node iodevice node_0x1738 {			/* next @ 0x173f */
	device-type = "pcie-switch-downstream";
	device-number = 0xc;		/* 12 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x16c7;
}					/* @ 0x173e */
node iodevice node_0x173f {			/* next @ 0x1746 */
	device-type = "pcie-switch-downstream";
	device-number = 0xd;		/* 13 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x16c7;
}					/* @ 0x1745 */
node interrupt-map-entry node_0x1746 {			/* next @ 0x174d */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x1;		/* 1 */
	parent-interrupt = 0x14;		/* 20 */
	parent-device-path = "/pci@500";
	back -> node_0x1686;
}					/* @ 0x174c */
node interrupt-map-entry node_0x174d {			/* next @ 0x1754 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x2;		/* 2 */
	parent-interrupt = 0x15;		/* 21 */
	parent-device-path = "/pci@500";
	back -> node_0x1686;
}					/* @ 0x1753 */
node interrupt-map-entry node_0x1754 {			/* next @ 0x175b */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x3;		/* 3 */
	parent-interrupt = 0x16;		/* 22 */
	parent-device-path = "/pci@500";
	back -> node_0x1686;
}					/* @ 0x175a */
node interrupt-map-entry node_0x175b {			/* next @ 0x1762 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 };
	child-interrupt = 0x4;		/* 4 */
	parent-interrupt = 0x17;		/* 23 */
	parent-device-path = "/pci@500";
	back -> node_0x1686;
}					/* @ 0x1761 */
node iodevice node_0x1762 {			/* next @ 0x176c */
	device-type = "pcie-switch-upstream";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x176c;
	fwd -> node_0x179e;
	fwd -> node_0x17a5;
	fwd -> node_0x17ac;
	back -> node_0x1686;
}					/* @ 0x176b */
node iodevice node_0x176c {			/* next @ 0x1776 */
	device-type = "pcie-switch-downstream";
	device-number = 0x8;		/* 8 */
	function-number = 0x0;		/* 0 */
	fwd -> node_0x1776;
	fwd -> node_0x1780;
	fwd -> node_0x178a;
	fwd -> node_0x1794;
	back -> node_0x1762;
}					/* @ 0x1775 */
node iodevice node_0x1776 {			/* next @ 0x1780 */
	device-type = "pci-network";
	device-number = 0x0;		/* 0 */
	function-number = 0x0;		/* 0 */
	mac-addresses = {

		0x00, 0x14, 0x4f, 0xa7, 0xbd, 0x36 };
	devalias = "net0";
	phy-type = "mif";
	phy-addr = 0x1d;		/* 29 */
	back -> node_0x176c;
}					/* @ 0x177f */
node iodevice node_0x1780 {			/* next @ 0x178a */
	device-type = "pci-network";
	device-number = 0x0;		/* 0 */
	function-number = 0x1;		/* 1 */
	mac-addresses = {

		0x00, 0x14, 0x4f, 0xa7, 0xbd, 0x37 };
	devalias = "net1";
	phy-type = "mif";
	phy-addr = 0x1c;		/* 28 */
	back -> node_0x176c;
}					/* @ 0x1789 */
node iodevice node_0x178a {			/* next @ 0x1794 */
	device-type = "pci-network";
	device-number = 0x0;		/* 0 */
	function-number = 0x2;		/* 2 */
	mac-addresses = {

		0x00, 0x14, 0x4f, 0xa7, 0xbd, 0x38 };
	devalias = "net2";
	phy-type = "mif";
	phy-addr = 0x1b;		/* 27 */
	back -> node_0x176c;
}					/* @ 0x1793 */
node iodevice node_0x1794 {			/* next @ 0x179e */
	device-type = "pci-network";
	device-number = 0x0;		/* 0 */
	function-number = 0x3;		/* 3 */
	mac-addresses = {

		0x00, 0x14, 0x4f, 0xa7, 0xbd, 0x39 };
	devalias = "net3";
	phy-type = "mif";
	phy-addr = 0x1a;		/* 26 */
	back -> node_0x176c;
}					/* @ 0x179d */
node iodevice node_0x179e {			/* next @ 0x17a5 */
	device-type = "pcie-switch-downstream";
	device-number = 0x9;		/* 9 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x1762;
}					/* @ 0x17a4 */
node iodevice node_0x17a5 {			/* next @ 0x17ac */
	device-type = "pcie-switch-downstream";
	device-number = 0xc;		/* 12 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x1762;
}					/* @ 0x17ab */
node iodevice node_0x17ac {			/* next @ 0x17b3 */
	device-type = "pcie-switch-downstream";
	device-number = 0xd;		/* 13 */
	function-number = 0x0;		/* 0 */
	slot-present = 0xffffffffffffffff;		/* -1 */
	back -> node_0x1762;
}					/* @ 0x17b2 */
node wart node_0x17b3 {			/* next @ 0x17bf */
	disabled = 0x0;		/* 0 */
	device-type = "vebus";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x65, 0x62, 0x75, 0x73, 0x00 };
	cfg-handle = 0xc0;		/* 192 */
	membase = 0xfff0000000;		/* 1099243192320 */
	memsize = 0x8000000;		/* 134217728 */
	#interrupt-cells = 0x1;		/* 1 */
	interrupt-map-mask = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff,
		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03 };
	fwd -> node_0x17bf;
	back -> node_0x1660;
}					/* @ 0x17be */
node interrupt-map-entry node_0x17bf {			/* next @ 0x17c6 */
	child-unit-address = {

		0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
		0x00, 0x00, 0x00, 0x00, 0x00, 0xca, 0x00, 0x00 };
	child-interrupt = 0x1;		/* 1 */
	parent-interrupt = 0x13;		/* 19 */
	parent-device-path = "/pci@400";
	back -> node_0x17b3;
}					/* @ 0x17c5 */
node wart node_0x17c6 {			/* next @ 0x17ce */
	back -> node_0x1660;
	name = "pci-performance-counters";
	disabled = 0x0;		/* 0 */
	device-type = "sun4v";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x76, 0x66, 0x70,
		0x69, 0x75, 0x2d, 0x70, 0x72, 0x00 };
	cfg-handle = 0x400;		/* 1024 */
}					/* @ 0x17cd */
node wart node_0x17ce {			/* next @ 0x17d6 */
	back -> node_0x1686;
	name = "pci-performance-counters";
	disabled = 0x0;		/* 0 */
	device-type = "sun4v";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x76, 0x66, 0x70,
		0x69, 0x75, 0x2d, 0x70, 0x72, 0x00 };
	cfg-handle = 0x500;		/* 1280 */
}					/* @ 0x17d5 */
node phys_io node_0x17d6 {			/* next @ 0x17db */
	back -> node_0x0;
	fwd -> node_0x1660;
	fwd -> node_0x1686;
}					/* @ 0x17da */
node channel-endpoints node_0x17db {			/* next @ 0x17ed */
	back -> node_0x0;
	fwd -> node_0x21a;
	fwd -> node_0x228;
	fwd -> node_0x270;
	fwd -> node_0x236;
	fwd -> node_0x24c;
	fwd -> node_0x198;
	fwd -> node_0x258;
	fwd -> node_0x264;
	fwd -> node_0x202;
	fwd -> node_0x1a6;
	fwd -> node_0x1b4;
	fwd -> node_0x1c2;
	fwd -> node_0x1d0;
	fwd -> node_0x1de;
	fwd -> node_0x1ec;
}					/* @ 0x17ec */
node virtual-devices node_0x17ed {			/* next @ 0x17fc */
	back -> node_0x0;
	name = "virtual-devices";
	device-type = "virtual-devices";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x76, 0x69, 0x72, 0x74, 0x75,
		0x61, 0x6c, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63,
		0x65, 0x73, 0x00 };
	cfg-handle = 0x100;		/* 256 */
	probe-list = 0x1f;		/* 31 */
	fwd -> node_0x17fc;
	fwd -> node_0x108;
	fwd -> node_0x100;
	fwd -> node_0x180d;
	fwd -> node_0x166;
	fwd -> node_0x16d;
	fwd -> node_0x176;
}					/* @ 0x17fb */
node channel-devices node_0x17fc {			/* next @ 0x1807 */
	back -> node_0x17ed;
	name = "channel-devices";
	device-type = "channel-devices";
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x73, 0x75, 0x6e,
		0x34, 0x76, 0x2d, 0x63, 0x68, 0x61, 0x6e, 0x6e,
		0x65, 0x6c, 0x2d, 0x64, 0x65, 0x76, 0x69, 0x63,
		0x65, 0x73, 0x00 };
	cfg-handle = 0x200;		/* 512 */
	fwd -> node_0x182;
	fwd -> node_0x1f2;
	fwd -> node_0x208;
	fwd -> node_0x23c;
}					/* @ 0x1806 */
node variables node_0x1807 {			/* next @ 0x180d */
	back -> node_0x0;
	auto-boot? = "false";
	keyboard-layout = "US-English";
	boot-device = "disk1";
}					/* @ 0x180c */
node virtual-device node_0x180d {			/* next @ 0x1814 */
	back -> node_0x17ed;
	name = "random-number-generator";
	cfg-handle = 0xe;		/* 14 */
	compatible = {

		0x53, 0x55, 0x4e, 0x57, 0x2c, 0x76, 0x66, 0x2d,
		0x72, 0x6e, 0x67, 0x00 };
	rng-#units = 0x2;		/* 2 */
}					/* @ 0x1813 */
node mblock node_0x1814 {			/* next @ 0x1822 */
	base = 0xe000000;		/* 234881024 */
	size = 0x3f2000000;		/* 16944988160 */
	address-congruence-offset = 0x0;		/* 0 */
	back -> node_0x15e;
	back -> node_0x1822;
	back -> node_0x1829;
	back -> node_0x1830;
	back -> node_0x1837;
	back -> node_0x183e;
	back -> node_0x1844;
	back -> node_0x184a;
	back -> node_0x1850;
}					/* @ 0x1821 */
node memory-latency-group node_0x1822 {			/* next @ 0x1829 */
	latency = 0x1f7e8;		/* 129000 */
	address-match = 0x0;		/* 0 */
	address-mask = 0x40000000;		/* 1073741824 */
	back -> node_0x21;
	fwd -> node_0x1814;
}					/* @ 0x1828 */
node memory-latency-group node_0x1829 {			/* next @ 0x1830 */
	latency = 0x1f7e8;		/* 129000 */
	address-match = 0x40000000;		/* 1073741824 */
	address-mask = 0x40000000;		/* 1073741824 */
	back -> node_0x6b;
	fwd -> node_0x1814;
}					/* @ 0x182f */
node memory-latency-group node_0x1830 {			/* next @ 0x1837 */
	latency = 0x2de60;		/* 188000 */
	address-match = 0x0;		/* 0 */
	address-mask = 0x40000000;		/* 1073741824 */
	back -> node_0x6b;
	fwd -> node_0x1814;
}					/* @ 0x1836 */
node memory-latency-group node_0x1837 {			/* next @ 0x183e */
	latency = 0x2de60;		/* 188000 */
	address-match = 0x40000000;		/* 1073741824 */
	address-mask = 0x40000000;		/* 1073741824 */
	back -> node_0x21;
	fwd -> node_0x1814;
}					/* @ 0x183d */
node dma-latency-group node_0x183e {			/* next @ 0x1844 */
	latency = 0xc7b50;		/* 818000 */
	back -> node_0x1660;
	back -> node_0x21;
	fwd -> node_0x1814;
}					/* @ 0x1843 */
node dma-latency-group node_0x1844 {			/* next @ 0x184a */
	latency = 0xc7b50;		/* 818000 */
	back -> node_0x1686;
	back -> node_0x6b;
	fwd -> node_0x1814;
}					/* @ 0x1849 */
node dma-latency-group node_0x184a {			/* next @ 0x1850 */
	latency = 0xdf638;		/* 915000 */
	back -> node_0x1660;
	back -> node_0x6b;
	fwd -> node_0x1814;
}					/* @ 0x184f */
node dma-latency-group node_0x1850 {			/* next @ 0x1856 */
	latency = 0xdf638;		/* 915000 */
	back -> node_0x1686;
	back -> node_0x21;
	fwd -> node_0x1814;
}					/* @ 0x1855 */
		/* The end @ 0x1856 */
